{"version":3,"sources":["views/apps/email/MailCard.js","views/apps/email/MailDetails.js","views/apps/email/ComposePopup.js","views/apps/email/Mails.js","views/apps/email/Sidebar.js","views/apps/email/store/actions/index.js","views/apps/email/index.js"],"names":["MailCard","props","mail","dispatch","selectMail","labelColors","updateMails","selectedMails","handleMailClick","handleMailReadUpdate","formatDateToMonthShort","Media","tag","onClick","id","className","classnames","isRead","img","from","avatar","type","name","checked","includes","onChange","e","stopPropagation","htmlFor","isStarred","size","favorite","body","subject","attachments","length","arr","map","label","renderLabels","labels","time","htmlToString","message","MailDetails","openMail","setOpenMail","paginateMail","handleMailToTrash","handleFolderUpdate","handleLabelsUpdate","useState","showReplies","setShowReplies","renderMessage","obj","Card","CardHeader","imgHeight","imgWidth","UncontrolledDropdown","DropdownToggle","caret","email","DropdownMenu","Table","borderless","to","formatDate","right","DropdownItem","CardBody","dangerouslySetInnerHTML","__html","CardFooter","item","index","href","preventDefault","src","thumbnail","alt","fileName","width","handleGoBack","handleFolderClick","folder","show","undefined","hasPreviousMail","hasNextMail","options","wheelPropagation","Row","Col","sm","Badge","color","pill","replies","renderReplies","ComposePopup","useSkin","composeOpen","toggleCompose","ccOpen","setCCOpen","bccOpen","setBCCOpen","selectOptions","value","img1","img2","img3","img4","img5","img6","SelectComponent","data","Option","toggleCC","toggleBCC","togglePopUp","Modal","scrollable","fade","container","isOpen","backdrop","contentClassName","toggle","modalClassName","ModalBody","Form","onSubmit","Label","for","isMulti","isClearable","theme","selectThemeColors","classNamePrefix","components","Input","placeholder","editorClassName","toolbarClassName","wrapperClassName","toolbar","inline","inDropdown","UncontrolledButtonDropdown","direction","Button","hidden","divider","Mails","query","store","setQuery","selectAllMail","setSidebarOpen","updateMailLabel","resetSelectedMail","selectCurrentMail","mails","personal","company","important","private","ids","bool","then","InputGroup","InputGroupAddon","addonType","InputGroupText","target","CustomInput","renderMails","currentMail","Sidebar","sidebarOpen","getMails","params","useParams","handleFolder","handleLabel","handleActiveItem","Ripple","block","ListGroup","ListGroupItem","Link","action","active","Object","keys","emailsMeta","inbox","draft","spam","axios","get","res","emailIds","dataToUpdate","getState","post","dir","emailId","val","EmailApp","setComposeOpen","useDispatch","useSelector","state","useEffect","q"],"mappings":"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","file":"static/js/11.7cd1abff.chunk.js","sourcesContent":["// ** Custom Components & Plugins\nimport classnames from 'classnames'\nimport { htmlToString } from '@utils'\nimport Avatar from '@components/avatar'\nimport { Star, Paperclip } from 'react-feather'\nimport { CustomInput, Media } from 'reactstrap'\n\nconst MailCard = props => {\n  // ** Props\n  const {\n    mail,\n    dispatch,\n    selectMail,\n    labelColors,\n    updateMails,\n    selectedMails,\n    handleMailClick,\n    handleMailReadUpdate,\n    formatDateToMonthShort\n  } = props\n\n  // ** Function to render labels\n  const renderLabels = arr => {\n    if (arr && arr.length) {\n      return arr.map(label => (\n        <span key={label} className={`bullet bullet-${labelColors[label]} bullet-sm mx-50`}></span>\n      ))\n    }\n  }\n\n  // ** Function to handle read & mail click\n  const onMailClick = () => {\n    handleMailClick(mail.id)\n    handleMailReadUpdate([mail.id], true)\n  }\n\n  return (\n    <Media tag='li' onClick={() => onMailClick(mail.id)} className={classnames({ 'mail-read': mail.isRead })}>\n      <div className='media-left pr-50'>\n        <Avatar img={mail.from.avatar} />\n        <div className='user-action'>\n          {/* <CustomInput\n            label=''\n            type='checkbox'\n            checked={selectedMails.includes(mail.id)}\n            id={`${mail.from.name}-${mail.id}`}\n            onChange={e => e.stopPropagation()}\n            onClick={e => {\n              dispatch(selectMail(mail.id))\n              e.stopPropagation()\n            }}\n          /> */}\n          <div className='custom-control custom-checkbox'>\n            <input\n              className='custom-control-input'\n              type='checkbox'\n              id={`${mail.from.name}-${mail.id}`}\n              checked={selectedMails.includes(mail.id)}\n              onChange={e => e.stopPropagation()}\n              onClick={e => {\n                dispatch(selectMail(mail.id))\n                e.stopPropagation()\n              }}\n            />\n            <label\n              className='custom-control-label'\n              htmlFor={`${mail.from.name}-${mail.id}`}\n              onClick={e => {\n                e.stopPropagation()\n              }}\n            ></label>\n          </div>\n          <div\n            className='email-favorite'\n            onClick={e => {\n              e.stopPropagation()\n              dispatch(updateMails([mail.id], { isStarred: !mail.isStarred }))\n            }}\n          >\n            <Star\n              size={14}\n              className={classnames({\n                favorite: mail.isStarred\n              })}\n            />\n          </div>\n        </div>\n      </div>\n      <Media body>\n        <div className='mail-details'>\n          <div className='mail-items'>\n            <h5 className='mb-25'>{mail.from.name}</h5>\n            <span className='text-truncate'>{mail.subject}</span>\n          </div>\n          <div className='mail-meta-item'>\n            {mail.attachments && mail.attachments.length ? <Paperclip size={14} /> : null}\n            {renderLabels(mail.labels)}\n            <span className='mail-date'>{formatDateToMonthShort(mail.time)}</span>\n          </div>\n        </div>\n        <div className='mail-message'>\n          <p className='text-truncate mb-0'>{htmlToString(mail.message)}</p>\n        </div>\n      </Media>\n    </Media>\n  )\n}\n\nexport default MailCard\n","// ** React Imports\nimport { Fragment, useState } from 'react'\n\n// ** Utils\nimport { formatDate } from '@utils'\n\n// ** Custom Components\nimport Avatar from '@components/avatar'\n\n// ** Third Party Components\nimport classnames from 'classnames'\nimport {\n  Row,\n  Col,\n  Badge,\n  Card,\n  Table,\n  CardBody,\n  CardFooter,\n  CardHeader,\n  DropdownMenu,\n  DropdownItem,\n  DropdownToggle,\n  UncontrolledDropdown\n} from 'reactstrap'\nimport {\n  ChevronLeft,\n  ChevronRight,\n  Star,\n  Folder,\n  Tag,\n  Mail,\n  Trash,\n  Edit2,\n  Info,\n  Paperclip,\n  MoreVertical,\n  CornerUpLeft,\n  CornerUpRight,\n  Trash2\n} from 'react-feather'\nimport PerfectScrollbar from 'react-perfect-scrollbar'\n\nconst MailDetails = props => {\n  // ** Props\n  const {\n    mail,\n    openMail,\n    dispatch,\n    labelColors,\n    setOpenMail,\n    updateMails,\n    paginateMail,\n    handleMailToTrash,\n    handleFolderUpdate,\n    handleLabelsUpdate,\n    handleMailReadUpdate,\n    formatDateToMonthShort\n  } = props\n\n  // ** States\n  const [showReplies, setShowReplies] = useState(false)\n\n  // ** Renders Labels\n  const renderLabels = arr => {\n    if (arr && arr.length) {\n      return arr.map(label => (\n        <Badge key={label} color={`light-${labelColors[label]}`} className='mr-50 text-capitalize' pill>\n          {label}\n        </Badge>\n      ))\n    }\n  }\n\n  // ** Renders Attachments\n  const renderAttachments = arr => {\n    return arr.map((item, index) => {\n      return (\n        <a\n          key={item.fileName}\n          href='/'\n          onClick={e => e.preventDefault()}\n          className={classnames({\n            'mb-50': index + 1 !== arr.length\n          })}\n        >\n          <img src={item.thumbnail} alt={item.fileName} width='16' className='mr-50' />\n          <span className='text-muted font-weight-bolder align-text-top'>{item.fileName}</span>\n          <span className='text-muted font-small-2 ml-25'>{`(${item.size})`}</span>\n        </a>\n      )\n    })\n  }\n\n  // ** Renders Messages\n  const renderMessage = obj => {\n    return (\n      <Card>\n        <CardHeader className='email-detail-head'>\n          <div className='user-details d-flex justify-content-between align-items-center flex-wrap'>\n            <Avatar img={obj.from.avatar} className='mr-75' imgHeight='48' imgWidth='48' />\n            <div className='mail-items'>\n              <h5 className='mb-0'>{obj.from.name}</h5>\n              <UncontrolledDropdown className='email-info-dropup'>\n                <DropdownToggle className='font-small-3 text-muted cursor-pointer' tag='span' caret>\n                  {obj.from.email}\n                </DropdownToggle>\n                <DropdownMenu>\n                  <Table className='font-small-3' size='sm' borderless>\n                    <tbody>\n                      <tr>\n                        <td className='text-right text-muted align-top'>From:</td>\n                        <td>{obj.from.email}</td>\n                      </tr>\n                      <tr>\n                        <td className='text-right text-muted align-top'>To:</td>\n                        <td>{obj.to[0].email}</td>\n                      </tr>\n                      <tr>\n                        <td className='text-right text-muted align-top'>Date:</td>\n                        <td>\n                          {formatDateToMonthShort(obj.time)}, {formatDateToMonthShort(obj.time, false)}\n                        </td>\n                      </tr>\n                    </tbody>\n                  </Table>\n                </DropdownMenu>\n              </UncontrolledDropdown>\n            </div>\n          </div>\n          <div className='mail-meta-item d-flex align-items-center'>\n            <small className='mail-date-time text-muted'>{formatDate(obj.time)}</small>\n            <UncontrolledDropdown className='ml-50'>\n              <DropdownToggle className='cursor-pointer' tag='span'>\n                <MoreVertical size={14} />\n              </DropdownToggle>\n              <DropdownMenu right>\n                <DropdownItem className='d-flex align-items-center w-100'>\n                  <CornerUpLeft className='mr-50' size={14} />\n                  Reply\n                </DropdownItem>\n                <DropdownItem className='d-flex align-items-center w-100'>\n                  <CornerUpRight className='mr-50' size={14} />\n                  Forward\n                </DropdownItem>\n                <DropdownItem className='d-flex align-items-center w-100'>\n                  <Trash2 className='mr-50' size={14} />\n                  Delete\n                </DropdownItem>\n              </DropdownMenu>\n            </UncontrolledDropdown>\n          </div>\n        </CardHeader>\n        <CardBody className='mail-message-wrapper pt-2'>\n          <div className='mail-message' dangerouslySetInnerHTML={{ __html: obj.message }}></div>\n        </CardBody>\n        {obj.attachments && obj.attachments.length ? (\n          <CardFooter>\n            <div className='mail-attachments'>\n              <div className='d-flex align-items-center mb-1'>\n                <Paperclip size={16} />\n                <h5 className='font-weight-bolder text-body mb-0 ml-50'>{obj.attachments.length} Attachment</h5>\n              </div>\n              <div className='d-flex flex-column'>{renderAttachments(obj.attachments)}</div>\n            </div>\n          </CardFooter>\n        ) : null}\n      </Card>\n    )\n  }\n\n  // ** Renders Replies\n  const renderReplies = arr => {\n    if (arr.length && showReplies === true) {\n      return arr.map((obj, index) => (\n        <Row key={index}>\n          <Col sm='12'>{renderMessage(obj)}</Col>\n        </Row>\n      ))\n    }\n  }\n\n  // ** Handle show replies, go back, folder & read click functions\n  const handleShowReplies = e => {\n    e.preventDefault()\n    setShowReplies(true)\n  }\n\n  const handleGoBack = () => {\n    setOpenMail(false)\n  }\n\n  const handleFolderClick = (e, folder, id) => {\n    handleFolderUpdate(e, folder, [id])\n    handleGoBack()\n  }\n\n  const handleReadClick = () => {\n    handleMailReadUpdate([mail.id], false)\n    handleGoBack()\n  }\n\n  return (\n    <div\n      className={classnames('email-app-details', {\n        show: openMail\n      })}\n    >\n      {mail !== null && mail !== undefined ? (\n        <Fragment>\n          <div className='email-detail-header'>\n            <div className='email-header-left d-flex align-items-center'>\n              <span className='go-back mr-1' onClick={handleGoBack}>\n                <ChevronLeft size={20} />\n              </span>\n              <h4 className='email-subject mb-0'>{mail.subject}</h4>\n            </div>\n            <div className='email-header-right ml-2 pl-1'>\n              <ul className='list-inline m-0'>\n                <li className='list-inline-item mr-1'>\n                  <span\n                    className='action-icon favorite'\n                    onClick={() => dispatch(updateMails([mail.id], { isStarred: !mail.isStarred }))}\n                  >\n                    <Star\n                      size={18}\n                      className={classnames({\n                        'text-warning fill-current': mail.isStarred\n                      })}\n                    />\n                  </span>\n                </li>\n                <li className='list-inline-item mr-1'>\n                  <UncontrolledDropdown>\n                    <DropdownToggle tag='span'>\n                      <Folder size={18} />\n                    </DropdownToggle>\n                    <DropdownMenu right>\n                      <DropdownItem\n                        tag='a'\n                        href='/'\n                        onClick={e => handleFolderClick(e, 'draft', mail.id)}\n                        className='d-flex align-items-center'\n                      >\n                        <Edit2 className='mr-50' size={18} />\n                        <span>Draft</span>\n                      </DropdownItem>\n                      <DropdownItem\n                        tag='a'\n                        href='/'\n                        onClick={e => handleFolderClick(e, 'spam', mail.id)}\n                        className='d-flex align-items-center'\n                      >\n                        <Info className='mr-50' size={18} />\n                        <span>Spam</span>\n                      </DropdownItem>\n                      <DropdownItem\n                        tag='a'\n                        href='/'\n                        onClick={e => handleFolderClick(e, 'trash', mail.id)}\n                        className='d-flex align-items-center'\n                      >\n                        <Trash className='mr-50' size={18} />\n                        <span>Trash</span>\n                      </DropdownItem>\n                    </DropdownMenu>\n                  </UncontrolledDropdown>\n                </li>\n                <li className='list-inline-item mr-1'>\n                  <UncontrolledDropdown>\n                    <DropdownToggle tag='span'>\n                      <Tag size={18} />\n                    </DropdownToggle>\n                    <DropdownMenu right>\n                      <DropdownItem\n                        tag='a'\n                        href='/'\n                        onClick={e => handleLabelsUpdate(e, 'personal', [mail.id])}\n                        className='d-flex align-items-center'\n                      >\n                        <span className='bullet bullet-success bullet-sm mr-50' />\n                        <span>Personal</span>\n                      </DropdownItem>\n                      <DropdownItem\n                        tag='a'\n                        href='/'\n                        onClick={e => handleLabelsUpdate(e, 'company', [mail.id])}\n                        className='d-flex align-items-center'\n                      >\n                        <span className='bullet bullet-primary bullet-sm mr-50' />\n                        <span>Company</span>\n                      </DropdownItem>\n                      <DropdownItem\n                        tag='a'\n                        href='/'\n                        onClick={e => handleLabelsUpdate(e, 'important', [mail.id])}\n                        className='d-flex align-items-center'\n                      >\n                        <span className='bullet bullet-warning bullet-sm mr-50' />\n                        <span>Important</span>\n                      </DropdownItem>\n                      <DropdownItem\n                        tag='a'\n                        href='/'\n                        onClick={e => handleLabelsUpdate(e, 'private', [mail.id])}\n                        className='d-flex align-items-center'\n                      >\n                        <span className='bullet bullet-danger bullet-sm mr-50' />\n                        <span>Private</span>\n                      </DropdownItem>\n                    </DropdownMenu>\n                  </UncontrolledDropdown>\n                </li>\n                <li className='list-inline-item mr-1'>\n                  <span className='action-icon' onClick={handleReadClick}>\n                    <Mail size={18} />\n                  </span>\n                </li>\n                <li className='list-inline-item mr-1'>\n                  <span\n                    className='action-icon'\n                    onClick={() => {\n                      handleMailToTrash([mail.id])\n                      handleGoBack()\n                    }}\n                  >\n                    <Trash size={18} />\n                  </span>\n                </li>\n                <li className='list-inline-item email-prev'>\n                  <span\n                    className={classnames({\n                      'action-icon': mail.hasPreviousMail\n                    })}\n                    onClick={() => (mail.hasPreviousMail ? dispatch(paginateMail('next', mail.id)) : null)}\n                  >\n                    <ChevronLeft\n                      size={18}\n                      className={classnames({\n                        'text-muted': !mail.hasPreviousMail\n                      })}\n                    />\n                  </span>\n                </li>\n                <li className='list-inline-item email-next'>\n                  <span\n                    className={classnames({\n                      'action-icon': mail.hasNextMail\n                    })}\n                    onClick={() => (mail.hasNextMail ? dispatch(paginateMail('previous', mail.id)) : null)}\n                  >\n                    <ChevronRight\n                      size={18}\n                      className={classnames({\n                        'text-muted': !mail.hasNextMail\n                      })}\n                    />\n                  </span>\n                </li>\n              </ul>\n            </div>\n          </div>\n          <PerfectScrollbar className='email-scroll-area' options={{ wheelPropagation: false }}>\n            <Row>\n              <Col sm='12'>\n                <div className='email-label'>{renderLabels(mail.labels)}</div>\n              </Col>\n            </Row>\n            {mail.replies && mail.replies.length ? (\n              <Fragment>\n                {showReplies === false ? (\n                  <Row className='mb-1'>\n                    <Col sm='12'>\n                      <a className='font-weight-bold' href='/' onClick={handleShowReplies}>\n                        View {mail.replies.length} Earlier Messages\n                      </a>\n                    </Col>\n                  </Row>\n                ) : null}\n\n                {renderReplies(mail.replies)}\n              </Fragment>\n            ) : null}\n            <Row>\n              <Col sm='12'>{renderMessage(mail)}</Col>\n            </Row>\n            <Row>\n              <Col sm='12'>\n                <Card>\n                  <CardBody>\n                    <h5 className='mb-0'>\n                      Click here to{' '}\n                      <a href='/' onClick={e => e.preventDefault()}>\n                        Reply\n                      </a>{' '}\n                      or{' '}\n                      <a href='/' onClick={e => e.preventDefault()}>\n                        Forward\n                      </a>\n                    </h5>\n                  </CardBody>\n                </Card>\n              </Col>\n            </Row>\n          </PerfectScrollbar>\n        </Fragment>\n      ) : null}\n    </div>\n  )\n}\n\nexport default MailDetails\n","// ** React Imports\nimport { useState } from 'react'\n\n// ** Custom Components\nimport Avatar from '@components/avatar'\n\n// ** Third Party Components\nimport { Editor } from 'react-draft-wysiwyg'\nimport Select, { components } from 'react-select'\nimport { Minus, X, Maximize2, Paperclip, MoreVertical, Trash } from 'react-feather'\nimport {\n  Button,\n  Modal,\n  ModalBody,\n  Form,\n  Label,\n  Input,\n  DropdownMenu,\n  DropdownItem,\n  DropdownToggle,\n  UncontrolledDropdown,\n  UncontrolledButtonDropdown\n} from 'reactstrap'\nimport { selectThemeColors } from '@utils'\n\n// ** Custom Hooks\nimport { useSkin } from '@hooks/useSkin'\n\n// ** User Avatars\nimport img1 from '@src/assets/images/portrait/small/avatar-s-3.jpg'\nimport img2 from '@src/assets/images/portrait/small/avatar-s-1.jpg'\nimport img3 from '@src/assets/images/portrait/small/avatar-s-4.jpg'\nimport img4 from '@src/assets/images/portrait/small/avatar-s-6.jpg'\nimport img5 from '@src/assets/images/portrait/small/avatar-s-2.jpg'\nimport img6 from '@src/assets/images/portrait/small/avatar-s-11.jpg'\n\n// ** Styles\nimport '@styles/react/libs/editor/editor.scss'\nimport '@styles/react/libs/react-select/_react-select.scss'\n\nconst ComposePopup = props => {\n  // ** Props & Custom Hooks\n  const [skin, setSkin] = useSkin()\n  const { composeOpen, toggleCompose } = props\n\n  // ** States\n  const [ccOpen, setCCOpen] = useState(false)\n  const [bccOpen, setBCCOpen] = useState(false)\n\n  // ** User Select Options & Components\n  const selectOptions = [\n    { value: 'pheobe', label: 'Pheobe Buffay', img: img1 },\n    { value: 'chandler', label: 'Chandler Bing', img: img2 },\n    { value: 'ross', label: 'Ross Geller', img: img3 },\n    { value: 'monica', label: 'Monica Geller', img: img4 },\n    { value: 'joey', label: 'Joey Tribbiani', img: img5 },\n    { value: 'Rachel', label: 'Rachel Green', img: img6 }\n  ]\n\n  const SelectComponent = ({ data, ...props }) => {\n    return (\n      <components.Option {...props}>\n        <div className='d-flex flex-wrap align-items-center'>\n          <Avatar className='my-0 mr-50' size='sm' img={data.img} />\n          {data.label}\n        </div>\n      </components.Option>\n    )\n  }\n\n  // ** CC Toggle Function\n  const toggleCC = e => {\n    e.preventDefault()\n    setCCOpen(!ccOpen)\n  }\n\n  // ** BCC Toggle Function\n  const toggleBCC = e => {\n    e.preventDefault()\n    setBCCOpen(!bccOpen)\n  }\n\n  // ** Toggles Compose POPUP\n  const togglePopUp = e => {\n    e.preventDefault()\n    toggleCompose()\n  }\n\n  return (\n    <Modal\n      scrollable\n      fade={false}\n      id='compose-mail'\n      container='.content-body'\n      className='modal-lg'\n      isOpen={composeOpen}\n      backdrop={false}\n      contentClassName='p-0'\n      toggle={toggleCompose}\n      modalClassName='modal-sticky'\n    >\n      <div className='modal-header'>\n        <h5 className='modal-title'>Compose Mail</h5>\n        <div className='modal-actions'>\n          <a href='/' className='text-body mr-75' onClick={togglePopUp}>\n            <Minus size={14} />\n          </a>\n          <a href='/' className='text-body mr-75' onClick={e => e.preventDefault()}>\n            <Maximize2 size={14} />\n          </a>\n          <a href='/' className='text-body' onClick={togglePopUp}>\n            <X size={14} />\n          </a>\n        </div>\n      </div>\n      <ModalBody className='flex-grow-1 p-0'>\n        <Form className='compose-form' onSubmit={e => e.preventDefault()}>\n          <div className='compose-mail-form-field'>\n            <Label for='email-to' className='form-label'>\n              To:\n            </Label>\n            <div className='flex-grow-1'>\n              <Select\n                isMulti\n                id='email-to'\n                isClearable={false}\n                theme={selectThemeColors}\n                options={selectOptions}\n                className='react-select select-borderless'\n                classNamePrefix='select'\n                components={{ Option: SelectComponent }}\n              />\n            </div>\n            <div>\n              <a href='/' className='toggle-cc text-body mr-1' onClick={toggleCC}>\n                CC\n              </a>\n              <a href='/' className='toggle-cc text-body' onClick={toggleBCC}>\n                BCC\n              </a>\n            </div>\n          </div>\n          {ccOpen === true ? (\n            <div className='compose-mail-form-field cc-wrapper'>\n              <Label for='email-cc' className='form-label'>\n                CC:\n              </Label>\n              <div className='flex-grow-1'>\n                <Select\n                  isMulti\n                  id='email-cc'\n                  isClearable={false}\n                  theme={selectThemeColors}\n                  options={selectOptions}\n                  className='react-select select-borderless'\n                  classNamePrefix='select'\n                  components={{ Option: SelectComponent }}\n                />\n              </div>\n              <div>\n                <a href='/' className='toggle-cc text-body' onClick={toggleCC}>\n                  <X size={14} />\n                </a>\n              </div>\n            </div>\n          ) : null}\n          {bccOpen === true ? (\n            <div className='compose-mail-form-field cc-wrapper'>\n              <Label for='email-bcc' className='form-label'>\n                BCC:\n              </Label>\n              <div className='flex-grow-1'>\n                <Select\n                  isMulti\n                  id='email-bcc'\n                  isClearable={false}\n                  theme={selectThemeColors}\n                  options={selectOptions}\n                  className='react-select select-borderless'\n                  classNamePrefix='select'\n                  components={{ Option: SelectComponent }}\n                />\n              </div>\n              <div>\n                <a href='/' className='toggle-cc text-body' onClick={toggleBCC}>\n                  <X size={14} />\n                </a>\n              </div>\n            </div>\n          ) : null}\n          <div className='compose-mail-form-field'>\n            <Label for='email-subject' className='form-label'>\n              Subject:\n            </Label>\n            <Input id='email-subject' placeholder='Subject' />\n          </div>\n          <div id='message-editor'>\n            <Editor\n              placeholder='Message'\n              editorClassName='rounded-0'\n              toolbarClassName='rounded-0'\n              wrapperClassName='toolbar-bottom'\n              toolbar={{\n                options: ['inline', 'textAlign'],\n                inline: {\n                  inDropdown: false,\n                  options: ['bold', 'italic', 'underline', 'strikethrough']\n                }\n              }}\n            />\n          </div>\n          <div className='compose-footer-wrapper'>\n            <div className='btn-wrapper d-flex align-items-center'>\n              <UncontrolledButtonDropdown direction='up' className='mr-1'>\n                <Button color='primary' onClick={toggleCompose}>\n                  Send\n                </Button>\n                <DropdownToggle className='dropdown-toggle-split' color='primary' caret></DropdownToggle>\n                <DropdownMenu right>\n                  <DropdownItem href='/' tag='a' onClick={togglePopUp}>\n                    Schedule Send\n                  </DropdownItem>\n                </DropdownMenu>\n              </UncontrolledButtonDropdown>\n              <div className='email-attachement'>\n                <Label className='mb-0' for='attach-email-item'>\n                  <Paperclip className='cursor-pointer ml-50' size={18} />\n                  <input type='file' name='attach-email-item' id='attach-email-item' hidden />\n                </Label>\n              </div>\n            </div>\n            <div className='footer-action d-flex align-items-center'>\n              <UncontrolledDropdown className='mr-50' direction='up'>\n                <DropdownToggle tag='span'>\n                  <MoreVertical className='cursor-pointer' size={18} />\n                </DropdownToggle>\n                <DropdownMenu right>\n                  <DropdownItem href='/' tag='a' onClick={e => e.preventDefault()}>\n                    Add Label\n                  </DropdownItem>\n                  <DropdownItem href='/' tag='a' onClick={e => e.preventDefault()}>\n                    Plain text mode\n                  </DropdownItem>\n                  <DropdownItem divider />\n                  <DropdownItem href='/' tag='a' onClick={e => e.preventDefault()}>\n                    Print\n                  </DropdownItem>\n                  <DropdownItem href='/' tag='a' onClick={e => e.preventDefault()}>\n                    Check Spelling\n                  </DropdownItem>\n                </DropdownMenu>\n              </UncontrolledDropdown>\n              <Trash size={18} onClick={toggleCompose} />\n            </div>\n          </div>\n        </Form>\n      </ModalBody>\n    </Modal>\n  )\n}\n\nexport default ComposePopup\n","// ** React Imports\nimport { Fragment, useState } from 'react'\n\n// ** Mail Components Imports\nimport MailCard from './MailCard'\nimport MailDetails from './MailDetails'\nimport ComposePopUp from './ComposePopup'\n\n// ** Utils\nimport { formatDateToMonthShort } from '@utils'\n\n// ** Third Party Components\nimport PerfectScrollbar from 'react-perfect-scrollbar'\nimport {\n  InputGroup,\n  InputGroupAddon,\n  Input,\n  InputGroupText,\n  CustomInput,\n  DropdownMenu,\n  DropdownItem,\n  DropdownToggle,\n  UncontrolledDropdown\n} from 'reactstrap'\nimport { Menu, Search, Folder, Tag, Mail, Trash, Edit2, Info } from 'react-feather'\n\nconst Mails = props => {\n  // ** Props\n  const {\n    query,\n    store,\n    setQuery,\n    dispatch,\n    selectMail,\n    composeOpen,\n    updateMails,\n    paginateMail,\n    selectAllMail,\n    toggleCompose,\n    setSidebarOpen,\n    updateMailLabel,\n    resetSelectedMail,\n    selectCurrentMail\n  } = props\n\n  const { mails, selectedMails } = store\n\n  // ** States\n  const [openMail, setOpenMail] = useState(false)\n\n  // ** Variables\n  const labelColors = {\n    personal: 'success',\n    company: 'primary',\n    important: 'warning',\n    private: 'danger'\n  }\n\n  // ** Handles Update Functions\n  const handleMailClick = id => {\n    dispatch(selectCurrentMail(id))\n    setOpenMail(true)\n  }\n\n  // ** Handles SelectAll\n  const handleSelectAll = e => {\n    dispatch(selectAllMail(e.target.checked))\n  }\n\n  /*eslint-disable */\n\n  // ** Handles Folder Update\n  const handleFolderUpdate = (e, folder, ids = selectedMails) => {\n    e.preventDefault()\n    dispatch(updateMails(ids, { folder }))\n    dispatch(resetSelectedMail())\n  }\n\n  // ** Handles Label Update\n  const handleLabelsUpdate = (e, label, ids = selectedMails) => {\n    e.preventDefault()\n    dispatch(updateMailLabel(ids, label))\n    dispatch(resetSelectedMail())\n  }\n\n  // ** Handles Mail Read Update\n  const handleMailReadUpdate = (arr, bool) => {\n    dispatch(updateMails(arr, { isRead: bool })).then(() => dispatch(resetSelectedMail()))\n    dispatch(selectAllMail(false))\n  }\n\n  // ** Handles Move to Trash\n  const handleMailToTrash = ids => {\n    dispatch(updateMails(ids, { folder: 'trash' }))\n    dispatch(resetSelectedMail())\n  }\n  /*eslint-enable */\n\n  // ** Renders Mail\n  const renderMails = () => {\n    if (mails.length) {\n      return mails.map((mail, index) => {\n        return (\n          <MailCard\n            mail={mail}\n            key={index}\n            dispatch={dispatch}\n            selectMail={selectMail}\n            updateMails={updateMails}\n            labelColors={labelColors}\n            selectedMails={selectedMails}\n            handleMailClick={handleMailClick}\n            handleMailReadUpdate={handleMailReadUpdate}\n            formatDateToMonthShort={formatDateToMonthShort}\n          />\n        )\n      })\n    }\n  }\n\n  return (\n    <Fragment>\n      <div className='email-app-list'>\n        <div className='app-fixed-search d-flex align-items-center'>\n          <div className='sidebar-toggle d-block d-lg-none ml-1' onClick={() => setSidebarOpen(true)}>\n            <Menu />\n          </div>\n          <div className='d-flex align-content-center justify-content-between w-100'>\n            <InputGroup className='input-group-merge'>\n              <InputGroupAddon addonType='prepend'>\n                <InputGroupText>\n                  <Search className='text-muted' size={14} />\n                </InputGroupText>\n              </InputGroupAddon>\n              <Input\n                id='email-search'\n                placeholder='Search email'\n                value={query}\n                onChange={e => setQuery(e.target.value)}\n              />\n            </InputGroup>\n          </div>\n        </div>\n        <div className='app-action'>\n          <div className='action-left'>\n            <CustomInput\n              type='checkbox'\n              id='select-all'\n              label='Select All'\n              onChange={handleSelectAll}\n              checked={selectedMails.length && selectedMails.length === mails.length}\n            />\n          </div>\n          {selectedMails.length ? (\n            <div className='action-right'>\n              <ul className='list-inline m-0'>\n                <li className='list-inline-item mr-1'>\n                  <UncontrolledDropdown>\n                    <DropdownToggle tag='span'>\n                      <Folder size={18} />\n                    </DropdownToggle>\n                    <DropdownMenu right>\n                      <DropdownItem\n                        tag='a'\n                        href='/'\n                        onClick={e => handleFolderUpdate(e, 'draft')}\n                        className='d-flex align-items-center'\n                      >\n                        <Edit2 className='mr-50' size={18} />\n                        <span>Draft</span>\n                      </DropdownItem>\n                      <DropdownItem\n                        tag='a'\n                        href='/'\n                        onClick={e => handleFolderUpdate(e, 'spam')}\n                        className='d-flex align-items-center'\n                      >\n                        <Info className='mr-50' size={18} />\n                        <span>Spam</span>\n                      </DropdownItem>\n                      <DropdownItem\n                        tag='a'\n                        href='/'\n                        onClick={e => handleFolderUpdate(e, 'trash')}\n                        className='d-flex align-items-center'\n                      >\n                        <Trash className='mr-50' size={18} />\n                        <span>Trash</span>\n                      </DropdownItem>\n                    </DropdownMenu>\n                  </UncontrolledDropdown>\n                </li>\n                <li className='list-inline-item mr-1'>\n                  <UncontrolledDropdown>\n                    <DropdownToggle tag='span'>\n                      <Tag size={18} />\n                    </DropdownToggle>\n                    <DropdownMenu right>\n                      <DropdownItem\n                        tag='a'\n                        href='/'\n                        onClick={e => handleLabelsUpdate(e, 'personal')}\n                        className='d-flex align-items-center'\n                      >\n                        <span className='bullet bullet-success bullet-sm mr-50' />\n                        <span>Personal</span>\n                      </DropdownItem>\n                      <DropdownItem\n                        tag='a'\n                        href='/'\n                        onClick={e => handleLabelsUpdate(e, 'company')}\n                        className='d-flex align-items-center'\n                      >\n                        <span className='bullet bullet-primary bullet-sm mr-50' />\n                        <span>Company</span>\n                      </DropdownItem>\n                      <DropdownItem\n                        tag='a'\n                        href='/'\n                        onClick={e => handleLabelsUpdate(e, 'important')}\n                        className='d-flex align-items-center'\n                      >\n                        <span className='bullet bullet-warning bullet-sm mr-50' />\n                        <span>Important</span>\n                      </DropdownItem>\n                      <DropdownItem\n                        tag='a'\n                        href='/'\n                        onClick={e => handleLabelsUpdate(e, 'private')}\n                        className='d-flex align-items-center'\n                      >\n                        <span className='bullet bullet-danger bullet-sm mr-50' />\n                        <span>Private</span>\n                      </DropdownItem>\n                    </DropdownMenu>\n                  </UncontrolledDropdown>\n                </li>\n                <li className='list-inline-item mr-1'>\n                  <span className='action-icon' onClick={() => handleMailReadUpdate(selectedMails, false)}>\n                    <Mail size={18} />\n                  </span>\n                </li>\n                <li className='list-inline-item mr-1'>\n                  <span className='action-icon' onClick={() => handleMailToTrash(selectedMails)}>\n                    <Trash size={18} />\n                  </span>\n                </li>\n              </ul>\n            </div>\n          ) : null}\n        </div>\n\n        <PerfectScrollbar className='email-user-list' options={{ wheelPropagation: false }}>\n          {mails.length ? (\n            <ul className='email-media-list'>{renderMails()}</ul>\n          ) : (\n            <div className='no-results d-block'>\n              <h5>No Items Found</h5>\n            </div>\n          )}\n        </PerfectScrollbar>\n      </div>\n      <MailDetails\n        openMail={openMail}\n        dispatch={dispatch}\n        mail={store.currentMail}\n        labelColors={labelColors}\n        setOpenMail={setOpenMail}\n        updateMails={updateMails}\n        paginateMail={paginateMail}\n        updateMailLabel={updateMailLabel}\n        handleMailToTrash={handleMailToTrash}\n        handleFolderUpdate={handleFolderUpdate}\n        handleLabelsUpdate={handleLabelsUpdate}\n        handleMailReadUpdate={handleMailReadUpdate}\n        formatDateToMonthShort={formatDateToMonthShort}\n      />\n      <ComposePopUp composeOpen={composeOpen} toggleCompose={toggleCompose} />\n    </Fragment>\n  )\n}\n\nexport default Mails\n","// ** Third Party Components\nimport classnames from 'classnames'\nimport { Link, useParams } from 'react-router-dom'\nimport PerfectScrollbar from 'react-perfect-scrollbar'\nimport { Mail, Send, Edit2, Star, Info, Trash } from 'react-feather'\nimport { Button, ListGroup, ListGroupItem, Badge } from 'reactstrap'\n\nconst Sidebar = props => {\n  // ** Props\n  const { store, sidebarOpen, toggleCompose, dispatch, getMails, resetSelectedMail, setSidebarOpen } = props\n\n  // ** Vars\n  const params = useParams()\n\n  // ** Functions To Handle Folder, Label & Compose\n  const handleFolder = folder => {\n    dispatch(getMails({ ...store.params, folder }))\n    dispatch(resetSelectedMail())\n  }\n\n  const handleLabel = label => {\n    dispatch(getMails({ ...store.params, label }))\n    dispatch(resetSelectedMail())\n  }\n\n  const handleComposeClick = () => {\n    toggleCompose()\n    setSidebarOpen(false)\n  }\n\n  // ** Functions To Active List Item\n  const handleActiveItem = value => {\n    if ((params.folder && params.folder === value) || (params.label && params.label === value)) {\n      return true\n    } else {\n      return false\n    }\n  }\n\n  return (\n    <div\n      className={classnames('sidebar-left', {\n        show: sidebarOpen\n      })}\n    >\n      <div className='sidebar'>\n        <div className='sidebar-content email-app-sidebar'>\n          <div className='email-app-menu'>\n            <div className='form-group-compose text-center compose-btn'>\n              <Button.Ripple className='compose-email' color='primary' block onClick={handleComposeClick}>\n                Compose\n              </Button.Ripple>\n            </div>\n            <PerfectScrollbar className='sidebar-menu-list' options={{ wheelPropagation: false }}>\n              <ListGroup tag='div' className='list-group-messages'>\n                <ListGroupItem\n                  tag={Link}\n                  to='/apps/email/inbox'\n                  onClick={() => handleFolder('inbox')}\n                  action\n                  active={!Object.keys(params).length || handleActiveItem('inbox')}\n                >\n                  <Mail size={18} className='mr-75' />\n                  <span className='align-middle'>Inbox</span>\n                  {store.emailsMeta.inbox ? (\n                    <Badge className='float-right' color='light-primary' pill>\n                      {store.emailsMeta.inbox}\n                    </Badge>\n                  ) : null}\n                </ListGroupItem>\n                <ListGroupItem\n                  tag={Link}\n                  to='/apps/email/sent'\n                  onClick={() => handleFolder('sent')}\n                  action\n                  active={handleActiveItem('sent')}\n                >\n                  <Send size={18} className='mr-75' />\n                  <span className='align-middle'>Sent</span>\n                </ListGroupItem>\n                <ListGroupItem\n                  tag={Link}\n                  to='/apps/email/draft'\n                  onClick={() => handleFolder('draft')}\n                  action\n                  active={handleActiveItem('draft')}\n                >\n                  <Edit2 size={18} className='mr-75' />\n                  <span className='align-middle'>Draft</span>\n                  {store.emailsMeta.draft ? (\n                    <Badge className='float-right' color='light-warning' pill>\n                      {store.emailsMeta.draft}\n                    </Badge>\n                  ) : null}\n                </ListGroupItem>\n                <ListGroupItem\n                  tag={Link}\n                  to='/apps/email/starred'\n                  onClick={() => handleFolder('starred')}\n                  action\n                  active={handleActiveItem('starred')}\n                >\n                  <Star size={18} className='mr-75' />\n                  <span className='align-middle'>Starred</span>\n                </ListGroupItem>\n                <ListGroupItem\n                  tag={Link}\n                  to='/apps/email/spam'\n                  onClick={() => handleFolder('spam')}\n                  action\n                  active={handleActiveItem('spam')}\n                >\n                  <Info size={18} className='mr-75' />\n                  <span className='align-middle'>Spam</span>\n                  {store.emailsMeta.spam ? (\n                    <Badge className='float-right' color='light-danger' pill>\n                      {store.emailsMeta.spam}\n                    </Badge>\n                  ) : null}\n                </ListGroupItem>\n                <ListGroupItem\n                  tag={Link}\n                  to='/apps/email/trash'\n                  onClick={() => handleFolder('trash')}\n                  action\n                  active={handleActiveItem('trash')}\n                >\n                  <Trash size={18} className='mr-75' />\n                  <span className='align-middle'>Trash</span>\n                </ListGroupItem>\n              </ListGroup>\n              <h6 className='section-label mt-3 mb-1 px-2'>Labels</h6>\n              <ListGroup tag='div' className='list-group-labels'>\n                <ListGroupItem\n                  tag={Link}\n                  to='/apps/email/label/personal'\n                  onClick={() => handleLabel('personal')}\n                  active={handleActiveItem('personal')}\n                  action\n                >\n                  <span className='bullet bullet-sm bullet-success mr-1'></span>\n                  Personal\n                </ListGroupItem>\n                <ListGroupItem\n                  tag={Link}\n                  to='/apps/email/label/company'\n                  onClick={() => handleLabel('company')}\n                  active={handleActiveItem('company')}\n                  action\n                >\n                  <span className='bullet bullet-sm bullet-primary mr-1'></span>\n                  Company\n                </ListGroupItem>\n                <ListGroupItem\n                  tag={Link}\n                  to='/apps/email/label/important'\n                  onClick={() => handleLabel('important')}\n                  active={handleActiveItem('important')}\n                  action\n                >\n                  <span className='bullet bullet-sm bullet-warning mr-1'></span>\n                  Important\n                </ListGroupItem>\n                <ListGroupItem\n                  tag={Link}\n                  to='/apps/email/label/private'\n                  onClick={() => handleLabel('private')}\n                  active={handleActiveItem('private')}\n                  action\n                >\n                  <span className='bullet bullet-sm bullet-danger mr-1'></span>\n                  Private\n                </ListGroupItem>\n              </ListGroup>\n            </PerfectScrollbar>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Sidebar\n","import axios from 'axios'\n\n// ** GET Mails\nexport const getMails = params => {\n  return dispatch => {\n    return axios.get('/apps/email/emails', { params }).then(res => {\n      dispatch({ type: 'GET_MAILS', data: res.data, params })\n    })\n  }\n}\n\n// ** UPDATE Mails\nexport const updateMails = (emailIds, dataToUpdate) => {\n  return (dispatch, getState) => {\n    return axios.post('/apps/email/update-emails', { emailIds, dataToUpdate }).then(res => {\n      dispatch({ type: 'UPDATE_MAILS', emailIds, dataToUpdate, data: res.data })\n      dispatch(getMails(getState().email.params))\n    })\n  }\n}\n\n// ** Update Mail Label\nexport const updateMailLabel = (emailIds, label) => {\n  return (dispatch, getState) => {\n    return axios.post('/apps/email/update-emails-label', { emailIds, label }).then(res => {\n      dispatch({ type: 'UPDATE_MAIL_LABEL', data: res.data })\n      dispatch(getMails(getState().email.params))\n    })\n  }\n}\n\n// ** GET Next/Prev mail\nexport const paginateMail = (dir, emailId) => {\n  return dispatch => {\n    return axios.get('/apps/email/paginate-email', { params: { dir, emailId } }).then(res => {\n      dispatch({ type: 'PAGINATE_MAIL', data: res.data })\n    })\n  }\n}\n\n// ** SELECT Current Mail\nexport const selectCurrentMail = id => dispatch => {\n  return axios.get('/apps/email/get-email', { id }).then(res => {\n    dispatch({ type: 'SELECT_CURRENT_MAIL', mail: res.data })\n  })\n}\n\n// ** SELECT Mail\nexport const selectMail = id => dispatch => dispatch({ type: 'SELECT_MAIL', id })\n\n// ** SELECT All Mails\nexport const selectAllMail = val => dispatch => dispatch({ type: 'SELECT_ALL_MAIL', val })\n\n// ** RESET Selected Mails\nexport const resetSelectedMail = () => dispatch => dispatch({ type: 'RESET_SELECT_MAILS' })\n","// ** React Imports\nimport { Fragment, useEffect, useState } from 'react'\nimport { useParams } from 'react-router-dom'\n\n// ** Email App Component Imports\nimport Mails from './Mails'\nimport Sidebar from './Sidebar'\n\n// ** Third Party Components\nimport classnames from 'classnames'\n\n// ** Store & Actions\nimport { useDispatch, useSelector } from 'react-redux'\nimport {\n  getMails,\n  selectMail,\n  updateMails,\n  paginateMail,\n  selectAllMail,\n  resetSelectedMail,\n  selectCurrentMail,\n  updateMailLabel\n} from './store/actions'\n\n// ** Styles\nimport '@styles/react/apps/app-email.scss'\n\nconst EmailApp = () => {\n  // ** States\n  const [query, setQuery] = useState('')\n  const [sidebarOpen, setSidebarOpen] = useState(false)\n  const [composeOpen, setComposeOpen] = useState(false)\n\n  // ** Toggle Compose Function\n  const toggleCompose = () => setComposeOpen(!composeOpen)\n\n  // ** Store Variables\n  const dispatch = useDispatch()\n  const store = useSelector(state => state.email)\n\n  // ** Vars\n  const params = useParams()\n\n  // ** UseEffect: GET initial data on Mount\n  useEffect(() => {\n    dispatch(getMails({ q: query || '', folder: params.folder || 'inbox', label: params.label || '' }))\n  }, [query, params.folder, params.label])\n\n  return (\n    <Fragment>\n      <Sidebar\n        store={store}\n        dispatch={dispatch}\n        getMails={getMails}\n        sidebarOpen={sidebarOpen}\n        toggleCompose={toggleCompose}\n        setSidebarOpen={setSidebarOpen}\n        resetSelectedMail={resetSelectedMail}\n      />\n      <div className='content-right'>\n        <div className='content-body'>\n          <div\n            className={classnames('body-content-overlay', {\n              show: sidebarOpen\n            })}\n            onClick={() => setSidebarOpen(false)}\n          ></div>\n          <Mails\n            store={store}\n            query={query}\n            setQuery={setQuery}\n            dispatch={dispatch}\n            getMails={getMails}\n            selectMail={selectMail}\n            updateMails={updateMails}\n            composeOpen={composeOpen}\n            paginateMail={paginateMail}\n            selectAllMail={selectAllMail}\n            toggleCompose={toggleCompose}\n            setSidebarOpen={setSidebarOpen}\n            updateMailLabel={updateMailLabel}\n            selectCurrentMail={selectCurrentMail}\n            resetSelectedMail={resetSelectedMail}\n          />\n        </div>\n      </div>\n    </Fragment>\n  )\n}\n\nexport default EmailApp\n"],"sourceRoot":""}