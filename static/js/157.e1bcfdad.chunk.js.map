{"version":3,"sources":["views/forms/form-elements/select/SelectReact.js","views/forms/form-elements/select/SelectMulti.js","views/forms/form-elements/select/SelectSizing.js","views/forms/form-elements/select/SelectOptions.js","views/forms/form-elements/select/SelectReactstrap.js","views/forms/form-elements/select/index.js","@core/components/breadcrumbs/index.js"],"names":["colourOptions","value","label","SelectReact","Card","CardHeader","CardTitle","tag","CardBody","className","target","href","rel","Row","Col","md","sm","Label","theme","selectThemeColors","classNamePrefix","defaultValue","options","isClearable","name","isLoading","isDisabled","SelectReactstrap","FormGroup","for","Input","type","id","multiple","CustomInput","size","bsSize","colorOptions","color","isFixed","iconOptions","icon","Facebook","Twitter","Linkedin","GitHub","Instagram","Dribbble","Gitlab","File","FileText","Image","Figma","Chrome","Command","Slack","Youtube","OptionComponent","data","props","Icon","Option","groupedOptions","animatedComponents","makeAnimated","styles","multiValue","base","state","opacity","multiValueLabel","paddingRight","multiValueRemove","display","orderOptions","values","length","filter","v","concat","formatGroupLabel","SelectOptions","useState","fixedValue","setFixedValue","isMulti","closeMenuOnSelect","components","onChange","action","removedValue","xs","loadOptions","inputValue","callback","setTimeout","i","toLowerCase","includes","filterColors1","defaultOptions","onInputChange","newValue","replace","Promise","resolve","filterColors2","cacheOptions","disabled","Select","breadCrumbTitle","breadCrumbParent","breadCrumbActive","SelectSizing","SelectMulti","BreadCrumbs","breadCrumbParent2","breadCrumbParent3","to","active","right","Link"],"mappings":"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","file":"static/js/157.e1bcfdad.chunk.js","sourcesContent":["import Select from 'react-select'\nimport { selectThemeColors } from '@utils'\nimport { Card, CardHeader, CardTitle, CardBody, Row, Col, Label } from 'reactstrap'\n\nconst colourOptions = [\n  { value: 'ocean', label: 'Ocean' },\n  { value: 'blue', label: 'Blue' },\n  { value: 'purple', label: 'Purple' },\n  { value: 'red', label: 'Red' },\n  { value: 'orange', label: 'Orange' }\n]\n\nconst SelectReact = () => {\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle tag='h4'>React Select</CardTitle>\n      </CardHeader>\n\n      <CardBody>\n        <p>\n          React Select is a flexible and beautiful Select Input control for ReactJS with multiselect, autocomplete,\n          async and creatable support. You can read it's documentation from{' '}\n          <a className='my-50' target='_blank' href='https://react-select.com/home' rel='noopener noreferrer'>\n            here\n          </a>\n          .\n        </p>\n        <Row>\n          <Col className='mb-1' md='6' sm='12'>\n            <Label>Basic</Label>\n            <Select\n              theme={selectThemeColors}\n              className='react-select'\n              classNamePrefix='select'\n              defaultValue={colourOptions[0]}\n              options={colourOptions}\n              isClearable={false}\n            />\n          </Col>\n          <Col className='mb-1' md='6' sm='12'>\n            <Label>Clearable</Label>\n            <Select\n              theme={selectThemeColors}\n              className='react-select'\n              classNamePrefix='select'\n              defaultValue={colourOptions[1]}\n              name='clear'\n              options={colourOptions}\n              isClearable\n            />\n          </Col>\n          <Col className='mb-1' md='6' sm='12'>\n            <Label>Loading</Label>\n            <Select\n              theme={selectThemeColors}\n              className='react-select'\n              classNamePrefix='select'\n              defaultValue={colourOptions[2]}\n              name='loading'\n              options={colourOptions}\n              isLoading={true}\n              isClearable={false}\n            />\n          </Col>\n          <Col className='mb-1' md='6' sm='12'>\n            <Label>Disabled</Label>\n            <Select\n              theme={selectThemeColors}\n              className='react-select'\n              classNamePrefix='select'\n              defaultValue={colourOptions[3]}\n              name='disabled'\n              options={colourOptions}\n              isDisabled={true}\n              isClearable={false}\n            />\n          </Col>\n        </Row>\n      </CardBody>\n    </Card>\n  )\n}\nexport default SelectReact\n","import { Card, CardHeader, CardTitle, CardBody, FormGroup, Input, CustomInput, Label, Row, Col } from 'reactstrap'\n\nconst SelectReactstrap = () => {\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle tag='h4'>Reactstrap Multi Select</CardTitle>\n      </CardHeader>\n      <CardBody>\n        <Row>\n          <Col md='4' sm='12'>\n            <FormGroup>\n              <Label for='select-multi'>Multiple Select</Label>\n              <Input type='select' name='select' id='select-multi' multiple>\n                <option>Square</option>\n                <option>Rectangle</option>\n                <option>Circle</option>\n                <option>Triangle</option>\n                <option>Pentagon</option>\n              </Input>\n            </FormGroup>\n          </Col>\n          <Col md='4' sm='12'>\n            <FormGroup>\n              <Label for='custom-select-multi'>Custom Multiple Select</Label>\n              <CustomInput type='select' name='select' id='custom-select-multi' multiple>\n                <option>Square</option>\n                <option>Rectangle</option>\n                <option>Circle</option>\n                <option>Triangle</option>\n                <option>Pentagon</option>\n              </CustomInput>\n            </FormGroup>\n          </Col>\n          <Col md='4' sm='12'>\n            <FormGroup>\n              <Label for='custom-select-size'>Custom Select Size</Label>\n              <CustomInput type='select' name='select' id='custom-select-size' size={4} multiple>\n                <option>Square</option>\n                <option>Rectangle</option>\n                <option>Circle</option>\n                <option>Triangle</option>\n                <option>Pentagon</option>\n              </CustomInput>\n            </FormGroup>\n          </Col>\n        </Row>\n      </CardBody>\n    </Card>\n  )\n}\nexport default SelectReactstrap\n","import { Card, CardHeader, CardTitle, CardBody, FormGroup, Input, Label } from 'reactstrap'\n\nconst SelectReactstrap = () => {\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle tag='h4'>Bootstrap Sizing</CardTitle>\n      </CardHeader>\n      <CardBody>\n        <FormGroup>\n          <Label for='select-lg'>Select Large</Label>\n          <Input type='select' name='select' bsSize='lg' id='select-lg'>\n            <option>Pulp Fiction</option>\n            <option>Nightcrawler</option>\n            <option>Donnie Darko</option>\n          </Input>\n        </FormGroup>\n        <FormGroup>\n          <Label for='select-default'>Select Default</Label>\n          <Input type='select' name='select' id='select-default'>\n            <option>Pulp Fiction</option>\n            <option>Nightcrawler</option>\n            <option>Donnie Darko</option>\n          </Input>\n        </FormGroup>\n        <FormGroup>\n          <Label for='select-sm'>Select Small</Label>\n          <Input type='select' name='select' bsSize='sm' id='select-sm'>\n            <option>Pulp Fiction</option>\n            <option>Nightcrawler</option>\n            <option>Donnie Darko</option>\n          </Input>\n        </FormGroup>\n      </CardBody>\n    </Card>\n  )\n}\nexport default SelectReactstrap\n","import { useState } from 'react'\nimport { Card, CardHeader, CardTitle, CardBody, Row, Col, Label } from 'reactstrap'\nimport { selectThemeColors } from '@utils'\nimport Select, { components } from 'react-select'\nimport makeAnimated from 'react-select/animated'\nimport CreatableSelect from 'react-select/creatable'\nimport AsyncSelect from 'react-select/async'\nimport {\n  Facebook,\n  Twitter,\n  Linkedin,\n  GitHub,\n  Instagram,\n  Dribbble,\n  Gitlab,\n  File,\n  FileText,\n  Image,\n  Figma,\n  Chrome,\n  Command,\n  Slack,\n  Youtube\n} from 'react-feather'\n\nconst colorOptions = [\n  { value: 'ocean', label: 'Ocean', color: '#00B8D9', isFixed: true },\n  { value: 'blue', label: 'Blue', color: '#0052CC', isFixed: true },\n  { value: 'purple', label: 'Purple', color: '#5243AA', isFixed: true },\n  { value: 'red', label: 'Red', color: '#FF5630', isFixed: false },\n  { value: 'orange', label: 'Orange', color: '#FF8B00', isFixed: false },\n  { value: 'yellow', label: 'Yellow', color: '#FFC400', isFixed: false }\n]\n\nconst iconOptions = [\n  {\n    label: 'Social Media',\n    options: [\n      {\n        value: 'facebook',\n        label: 'Facebook',\n        icon: Facebook\n      },\n      {\n        value: 'twitter',\n        label: 'Twitter',\n        icon: Twitter\n      },\n      {\n        value: 'linkedin',\n        label: 'Linkedin',\n        icon: Linkedin\n      },\n      {\n        value: 'github',\n        label: 'Github',\n        icon: GitHub\n      },\n      {\n        value: 'instagram',\n        label: 'Instagram',\n        icon: Instagram\n      },\n      {\n        value: 'dribbble',\n        label: 'Dribbble',\n        icon: Dribbble\n      },\n      {\n        value: 'gitlab',\n        label: 'Gitlab',\n        icon: Gitlab\n      }\n    ]\n  },\n  {\n    label: 'File Types',\n    options: [\n      { value: 'pdf', label: 'PDF', icon: File },\n      { value: 'word', label: 'word', icon: FileText },\n      { value: 'image', label: 'Image', icon: Image }\n    ]\n  },\n  {\n    label: 'Others',\n    options: [\n      { value: 'figma', label: 'Figma', icon: Figma },\n      { value: 'chrome', label: 'Chrome', icon: Chrome },\n      { value: 'safari', label: 'Safari', icon: Command },\n      { value: 'slack', label: 'Slack', icon: Slack },\n      { value: 'youtube', label: 'Youtube', icon: Youtube }\n    ]\n  }\n]\n\nconst OptionComponent = ({ data, ...props }) => {\n  const Icon = data.icon\n\n  return (\n    <components.Option {...props}>\n      <Icon className='mr-50' size={14} />\n      {data.label}\n    </components.Option>\n  )\n}\n\nconst groupedOptions = [\n  {\n    label: 'Ice Creams',\n    options: [\n      { value: 'vanilla', label: 'Vanilla' },\n      { value: 'Dark Chocolate', label: 'Dark Chocolate' },\n      { value: 'chocolate', label: 'Chocolate' },\n      { value: 'strawberry', label: 'Strawberry' },\n      { value: 'salted-caramel', label: 'Salted Caramel' }\n    ]\n  },\n  {\n    label: 'Snacks',\n    options: [\n      { value: 'Pizza', label: 'Pizza' },\n      { value: 'Burger', label: 'Burger' },\n      { value: 'Pasta', label: 'Pasta' },\n      { value: 'Pretzel', label: 'Pretzel' },\n      { value: 'Popcorn', label: 'Popcorn' }\n    ]\n  }\n]\n\nconst animatedComponents = makeAnimated()\n\nconst styles = {\n  multiValue: (base, state) => {\n    return state.data.isFixed ? { ...base, opacity: '0.5' } : base\n  },\n  multiValueLabel: (base, state) => {\n    return state.data.isFixed ? { ...base, color: '#626262', paddingRight: 6 } : base\n  },\n  multiValueRemove: (base, state) => {\n    return state.data.isFixed ? { ...base, display: 'none' } : base\n  }\n}\n\nconst orderOptions = values => {\n  if (values.length > 0) return values.filter(v => v.isFixed).concat(values.filter(v => !v.isFixed))\n}\n\nconst formatGroupLabel = data => (\n  <div className='d-flex justify-content-between align-center'>\n    <strong>\n      <span>{data.label}</span>\n    </strong>\n    <span>{data.options.length}</span>\n  </div>\n)\n\nconst SelectOptions = () => {\n  const [fixedValue, setFixedValue] = useState(orderOptions([colorOptions[0], colorOptions[1], colorOptions[3]]))\n\n  const filterColors1 = inputValue => {\n    return colorOptions.filter(i => i.label.toLowerCase().includes(inputValue.toLowerCase()))\n  }\n\n  const loadOptions = (inputValue, callback) => {\n    setTimeout(() => {\n      callback(filterColors1(inputValue))\n    }, 2000)\n  }\n\n  const filterColors2 = inputValue => {\n    return colorOptions.filter(i => i.label.toLowerCase().includes(inputValue.toLowerCase()))\n  }\n\n  const fixedOnChange = (value, { action, removedValue }) => {\n    switch (action) {\n      case 'remove-value':\n      case 'pop-value':\n        if (removedValue.isFixed) {\n          return\n        }\n        break\n      case 'clear':\n        value = colorOptions.filter(v => v.isFixed)\n        break\n      default:\n        break\n    }\n\n    value = orderOptions(value)\n    setFixedValue(value)\n  }\n\n  const handleInputChange = newValue => {\n    const val = newValue.replace(/\\W/g, '')\n    return val\n  }\n\n  const promiseOptions = inputValue => {\n    return new Promise(resolve => {\n      setTimeout(() => {\n        resolve(filterColors2(inputValue))\n      }, 2000)\n    })\n  }\n\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle tag='h4'>Options</CardTitle>\n      </CardHeader>\n\n      <CardBody>\n        <Row>\n          <Col className='mb-1' md='6' sm='12'>\n            <Label>Multi Select</Label>\n            <Select\n              isClearable={false}\n              theme={selectThemeColors}\n              defaultValue={[colorOptions[2], colorOptions[3]]}\n              isMulti\n              name='colors'\n              options={colorOptions}\n              className='react-select'\n              classNamePrefix='select'\n            />\n          </Col>\n          <Col className='mb-1' md='6' sm='12'>\n            <Label>Grouped Select</Label>\n            <Select\n              isClearable={false}\n              theme={selectThemeColors}\n              defaultValue={colorOptions[1]}\n              options={groupedOptions}\n              formatGroupLabel={formatGroupLabel}\n              className='react-select'\n              classNamePrefix='select'\n            />\n          </Col>\n          <Col className='mb-1' md='6' sm='12'>\n            <Label>Animated Select</Label>\n            <Select\n              isClearable={false}\n              theme={selectThemeColors}\n              closeMenuOnSelect={false}\n              components={animatedComponents}\n              defaultValue={[colorOptions[4], colorOptions[5]]}\n              isMulti\n              options={colorOptions}\n              className='react-select'\n              classNamePrefix='select'\n            />\n          </Col>\n          <Col className='mb-1' md='6' sm='12'>\n            <Label>Fixed Options Select</Label>\n            <Select\n              isClearable={false}\n              value={fixedValue}\n              styles={styles}\n              isMulti\n              onChange={fixedOnChange}\n              theme={selectThemeColors}\n              name='colors'\n              className='react-select'\n              classNamePrefix='select'\n              options={colorOptions}\n            />\n          </Col>\n          <Col md={6} xs={12} className='mb-1'>\n            <Label>Async Callback Select</Label>\n            <AsyncSelect\n              isClearable={false}\n              className='react-select'\n              classNamePrefix='select'\n              name='callback-react-select'\n              loadOptions={loadOptions}\n              defaultOptions\n              onInputChange={handleInputChange}\n              theme={selectThemeColors}\n            />\n          </Col>\n          <Col md={6} xs={12} className='mb-1'>\n            <Label>Async Promises Select</Label>\n            <AsyncSelect\n              isClearable={false}\n              className='react-select'\n              classNamePrefix='select'\n              loadOptions={promiseOptions}\n              cacheOptions\n              defaultOptions\n            />\n          </Col>\n          <Col className='mb-1' md='6' sm='12'>\n            <Label>Creatable Select</Label>\n            <CreatableSelect options={colorOptions} className='react-select' classNamePrefix='select' />\n          </Col>\n          <Col className='mb-1' md='6' sm='12'>\n            <Label>Icons</Label>\n            <Select\n              options={iconOptions}\n              className='react-select'\n              classNamePrefix='select'\n              components={{\n                Option: OptionComponent\n              }}\n            />\n          </Col>\n        </Row>\n      </CardBody>\n    </Card>\n  )\n}\nexport default SelectOptions\n","import { Card, CardHeader, CardTitle, CardBody, FormGroup, Input, CustomInput, Label } from 'reactstrap'\n\nconst SelectReactstrap = () => {\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle tag='h4'>Reactstrap Select</CardTitle>\n      </CardHeader>\n      <CardBody>\n        <FormGroup>\n          <Label for='select-basic'>Basic Select</Label>\n          <Input type='select' name='select' id='select-basic'>\n            <option>Pulp Fiction</option>\n            <option>Nightcrawler</option>\n            <option>Donnie Darko</option>\n          </Input>\n        </FormGroup>\n        <FormGroup>\n          <Label for='select-custom'>Custom Select</Label>\n          <CustomInput type='select' name='select' id='select-custom'>\n            <option>Pulp Fiction</option>\n            <option>Nightcrawler</option>\n            <option>Donnie Darko</option>\n          </CustomInput>\n        </FormGroup>\n        <FormGroup>\n          <Label for='select-disabled'>Disabled Select</Label>\n          <Input type='select' name='select' id='select-disabled' disabled>\n            <option>Pulp Fiction</option>\n            <option>Nightcrawler</option>\n            <option>Donnie Darko</option>\n          </Input>\n        </FormGroup>\n      </CardBody>\n    </Card>\n  )\n}\nexport default SelectReactstrap\n","import { Fragment } from 'react'\nimport { Row, Col } from 'reactstrap'\nimport Breadcrumbs from '@components/breadcrumbs'\nimport ReactSelect from './SelectReact'\nimport SelectMulti from './SelectMulti'\nimport SelectSizing from './SelectSizing'\nimport Selectoptions from './SelectOptions'\nimport SelectReactstrap from './SelectReactstrap'\n\nimport '@styles/react/libs/react-select/_react-select.scss'\n\nconst Select = () => {\n  return (\n    <Fragment>\n      <Breadcrumbs breadCrumbTitle='Select' breadCrumbParent='Form Elements' breadCrumbActive='Select' />\n      <Row>\n        <Col sm='12'>\n          <ReactSelect />\n        </Col>\n        <Col sm='12'>\n          <Selectoptions />\n        </Col>\n        <Col md='6' sm='12'>\n          <SelectReactstrap />\n        </Col>\n        <Col md='6' sm='12'>\n          <SelectSizing />\n        </Col>\n        <Col sm='12'>\n          <SelectMulti />\n        </Col>\n      </Row>\n    </Fragment>\n  )\n}\nexport default Select\n","// ** React Imports\nimport { Link } from 'react-router-dom'\n\n// ** Third Party Components\nimport Proptypes from 'prop-types'\nimport { Grid, CheckSquare, MessageSquare, Mail, Calendar } from 'react-feather'\nimport {\n  Breadcrumb,\n  BreadcrumbItem,\n  UncontrolledButtonDropdown,\n  DropdownMenu,\n  DropdownItem,\n  DropdownToggle\n} from 'reactstrap'\n\nconst BreadCrumbs = props => {\n  // ** Props\n  const { breadCrumbTitle, breadCrumbParent, breadCrumbParent2, breadCrumbParent3, breadCrumbActive } = props\n\n  return (\n    <div className='content-header row'>\n      <div className='content-header-left col-md-9 col-12 mb-2'>\n        <div className='row breadcrumbs-top'>\n          <div className='col-12'>\n            {breadCrumbTitle ? <h2 className='content-header-title float-left mb-0'>{breadCrumbTitle}</h2> : ''}\n            <div className='breadcrumb-wrapper vs-breadcrumbs d-sm-block d-none col-12'>\n              <Breadcrumb>\n                <BreadcrumbItem tag='li'>\n                  <Link to='/'>Home</Link>\n                </BreadcrumbItem>\n                <BreadcrumbItem tag='li' className='text-primary'>\n                  {breadCrumbParent}\n                </BreadcrumbItem>\n                {breadCrumbParent2 ? (\n                  <BreadcrumbItem tag='li' className='text-primary'>\n                    {breadCrumbParent2}\n                  </BreadcrumbItem>\n                ) : (\n                  ''\n                )}\n                {breadCrumbParent3 ? (\n                  <BreadcrumbItem tag='li' className='text-primary'>\n                    {breadCrumbParent3}\n                  </BreadcrumbItem>\n                ) : (\n                  ''\n                )}\n                <BreadcrumbItem tag='li' active>\n                  {breadCrumbActive}\n                </BreadcrumbItem>\n              </Breadcrumb>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className='content-header-right text-md-right col-md-3 col-12 d-md-block d-none'>\n        <div className='form-group breadcrum-right dropdown'>\n          <UncontrolledButtonDropdown>\n            <DropdownToggle color='primary' size='sm' className='btn-icon btn-round dropdown-toggle'>\n              <Grid size={14} />\n            </DropdownToggle>\n            <DropdownMenu tag='ul' right>\n              <DropdownItem tag={Link} to='/apps/chat'>\n                <CheckSquare className='mr-1' size={14} />\n                <span className='align-middle'>Todo</span>\n              </DropdownItem>\n              <DropdownItem tag={Link} to='/apps/chat'>\n                <MessageSquare className='mr-1' size={14} />\n                <span className='align-middle'>Chat</span>\n              </DropdownItem>\n              <DropdownItem tag={Link} to='/apps/email'>\n                <Mail className='mr-1' size={14} />\n                <span className='align-middle'>Email</span>\n              </DropdownItem>\n              <DropdownItem tag={Link} to='/apps/calendar'>\n                <Calendar className='mr-1' size={14} />\n                <span className='align-middle'>Calendar</span>\n              </DropdownItem>\n            </DropdownMenu>\n          </UncontrolledButtonDropdown>\n        </div>\n      </div>\n    </div>\n  )\n}\nexport default BreadCrumbs\n\n// ** PropTypes\nBreadCrumbs.propTypes = {\n  breadCrumbTitle: Proptypes.string.isRequired,\n  breadCrumbActive: Proptypes.string.isRequired\n}\n"],"sourceRoot":""}