{"version":3,"sources":["views/apps/chat/store/actions/index.js","views/apps/chat/Chat.js","views/apps/chat/SidebarLeft.js","views/apps/chat/UserProfileSidebar.js","views/apps/chat/index.js","../node_modules/reactstrap/es/CardText.js","../node_modules/reactstrap/es/Label.js","../node_modules/reactstrap/es/Form.js"],"names":["getChatContacts","dispatch","axios","get","then","res","type","data","selectChat","id","ChatLog","props","handleUser","handleUserSidebarRight","handleSidebar","store","userSidebarLeft","userProfile","selectedUser","chatArea","useRef","useDispatch","useState","msg","setMsg","useEffect","Object","keys","length","ReactDOM","findDOMNode","current","scrollTop","Number","MAX_SAFE_INTEGER","handleSendMsg","e","obj","preventDefault","message","post","contact","ChatWrapper","chat","PerfectScrollbar","className","classnames","onClick","window","innerWidth","size","imgHeight","imgWidth","img","avatar","status","fullName","UncontrolledDropdown","DropdownToggle","color","DropdownMenu","right","DropdownItem","href","ref","options","wheelPropagation","chatLog","formattedChatLog","chatMessageSenderId","senderId","undefined","msgGroup","messages","forEach","index","push","time","formattedChatData","map","item","Form","onSubmit","InputGroup","InputGroupAddon","addonType","InputGroupText","Input","value","onChange","target","placeholder","Label","for","hidden","Button","SidebarLeft","sidebar","handleUserSidebarLeft","chats","contacts","about","setAbout","query","setQuery","active","setActive","setStatus","filteredChat","setFilteredChat","filteredContacts","setFilteredContacts","handleUserClick","show","role","rows","defaultValue","CustomInput","label","checked","name","defaultChecked","searchFilterFunction","toLowerCase","includes","filteredChatsArr","filter","filteredContactssArr","formatDateToMonthShort","lastMessage","Date","CardText","unseenMsgs","Badge","pill","UserProfileSidebar","user","userSidebarRight","AppChat","useSelector","state","setUser","setSidebar","setUserSidebarRight","setUserSidebarLeft","Chat","propTypes","tag","tagPropType","PropTypes","string","cssModule","object","Tag","attributes","_objectWithoutPropertiesLoose","classes","mapToCssModules","classNames","React","createElement","_extends","defaultProps","stringOrNumberProp","oneOfType","number","columnProps","bool","shape","order","offset","children","node","check","xs","sm","md","lg","xl","widths","array","getColumnSizeClass","isXs","colWidth","colSize","htmlFor","colClasses","i","columnProp","colClass","isObject","_classNames","colSizeInterfix","inline","innerRef","func","_Component","_this","call","this","getRef","bind","_assertThisInitialized","submit","_inheritsLoose","_proto","prototype","render","_this$props","Component"],"mappings":"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","file":"static/js/125.63793089.chunk.js","sourcesContent":["import axios from 'axios'\n\n// ** Get User Profile\nexport const getUserProfile = () => {\n  return dispatch => {\n    return axios.get('/apps/chat/users/profile-user').then(res => {\n      return dispatch({\n        type: 'GET_USER_PROFILE',\n        userProfile: res.data\n      })\n    })\n  }\n}\n\n// ** Get Chats & Contacts\nexport const getChatContacts = () => {\n  return dispatch => {\n    axios.get('/apps/chat/chats-and-contacts').then(res => {\n      dispatch({\n        type: 'GET_CHAT_CONTACTS',\n        data: res.data\n      })\n    })\n  }\n}\n\n// ** Select Chat\nexport const selectChat = id => {\n  return dispatch => {\n    axios.get('/apps/chat/get-chat', { id }).then(res => {\n      dispatch({ type: 'SELECT_CHAT', data: res.data })\n      dispatch(getChatContacts())\n    })\n  }\n}\n\n// ** Send Msg\nexport const sendMsg = obj => {\n  return dispatch => {\n    axios.post('/apps/chat/send-msg', { obj }).then(res => {\n      dispatch({ type: 'SEND_MSG', data: res.data })\n      dispatch(selectChat(obj.contact.id))\n    })\n  }\n}\n","// ** React Imports\nimport { useState, useEffect, useRef } from 'react'\nimport ReactDOM from 'react-dom'\n\n// ** Custom Components\nimport Avatar from '@components/avatar'\n\n// ** Store & Actions\nimport { useDispatch } from 'react-redux'\nimport { sendMsg } from './store/actions'\n\n// ** Third Party Components\nimport classnames from 'classnames'\nimport PerfectScrollbar from 'react-perfect-scrollbar'\nimport { MessageSquare, Menu, PhoneCall, Video, Search, MoreVertical, Mic, Image, Send } from 'react-feather'\nimport {\n  UncontrolledDropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n  Form,\n  Label,\n  InputGroup,\n  InputGroupAddon,\n  Input,\n  InputGroupText,\n  Button\n} from 'reactstrap'\n\nconst ChatLog = props => {\n  // ** Props & Store\n  const { handleUser, handleUserSidebarRight, handleSidebar, store, userSidebarLeft } = props\n  const { userProfile, selectedUser } = store\n\n  // ** Refs & Dispatch\n  const chatArea = useRef(null)\n  const dispatch = useDispatch()\n\n  // ** State\n  const [msg, setMsg] = useState('')\n\n  // ** Scroll to chat bottom\n  const scrollToBottom = () => {\n    const chatContainer = ReactDOM.findDOMNode(chatArea.current)\n    chatContainer.scrollTop = Number.MAX_SAFE_INTEGER\n  }\n\n  // ** If user chat is not empty scrollToBottom\n  useEffect(() => {\n    const selectedUserLen = Object.keys(selectedUser).length\n\n    if (selectedUserLen) {\n      scrollToBottom()\n    }\n  }, [selectedUser])\n\n  // ** Formats chat data based on sender\n  const formattedChatData = () => {\n    let chatLog = []\n    if (selectedUser.chat) {\n      chatLog = selectedUser.chat.chat\n    }\n\n    const formattedChatLog = []\n    let chatMessageSenderId = chatLog[0] ? chatLog[0].senderId : undefined\n    let msgGroup = {\n      senderId: chatMessageSenderId,\n      messages: []\n    }\n    chatLog.forEach((msg, index) => {\n      if (chatMessageSenderId === msg.senderId) {\n        msgGroup.messages.push({\n          msg: msg.message,\n          time: msg.time\n        })\n      } else {\n        chatMessageSenderId = msg.senderId\n        formattedChatLog.push(msgGroup)\n        msgGroup = {\n          senderId: msg.senderId,\n          messages: [\n            {\n              msg: msg.message,\n              time: msg.time\n            }\n          ]\n        }\n      }\n      if (index === chatLog.length - 1) formattedChatLog.push(msgGroup)\n    })\n    return formattedChatLog\n  }\n\n  // ** Renders user chat\n  const renderChats = () => {\n    return formattedChatData().map((item, index) => {\n      return (\n        <div\n          key={index}\n          className={classnames('chat', {\n            'chat-left': item.senderId !== 11\n          })}\n        >\n          <div className='chat-avatar'>\n            <Avatar\n              className='box-shadow-1 cursor-pointer'\n              img={item.senderId === 11 ? userProfile.avatar : selectedUser.contact.avatar}\n            />\n          </div>\n\n          <div className='chat-body'>\n            {item.messages.map(chat => (\n              <div key={chat.msg} className='chat-content'>\n                <p>{chat.msg}</p>\n              </div>\n            ))}\n          </div>\n        </div>\n      )\n    })\n  }\n\n  // ** Opens right sidebar & handles its data\n  const handleAvatarClick = obj => {\n    handleUserSidebarRight()\n    handleUser(obj)\n  }\n\n  // ** On mobile screen open left sidebar on Start Conversation Click\n  const handleStartConversation = () => {\n    if (!Object.keys(selectedUser).length && !userSidebarLeft && window.innerWidth <= 1200) {\n      handleSidebar()\n    }\n  }\n\n  // ** Sends New Msg\n  const handleSendMsg = e => {\n    e.preventDefault()\n    if (msg.length) {\n      dispatch(sendMsg({ ...selectedUser, message: msg }))\n      setMsg('')\n    }\n  }\n\n  // ** ChatWrapper tag based on chat's length\n  const ChatWrapper = Object.keys(selectedUser).length && selectedUser.chat ? PerfectScrollbar : 'div'\n\n  return (\n    <div className='chat-app-window'>\n      <div className={classnames('start-chat-area', { 'd-none': Object.keys(selectedUser).length })}>\n        <div className='start-chat-icon mb-1'>\n          <MessageSquare />\n        </div>\n        <h4 className='sidebar-toggle start-chat-text' onClick={handleStartConversation}>\n          Start Conversation\n        </h4>\n      </div>\n      {Object.keys(selectedUser).length ? (\n        <div className={classnames('active-chat', { 'd-none': selectedUser === null })}>\n          <div className='chat-navbar'>\n            <header className='chat-header'>\n              <div className='d-flex align-items-center'>\n                <div className='sidebar-toggle d-block d-lg-none mr-1' onClick={handleSidebar}>\n                  <Menu size={21} />\n                </div>\n                <Avatar\n                  imgHeight='36'\n                  imgWidth='36'\n                  img={selectedUser.contact.avatar}\n                  status={selectedUser.contact.status}\n                  className='avatar-border user-profile-toggle m-0 mr-1'\n                  onClick={() => handleAvatarClick(selectedUser.contact)}\n                />\n                <h6 className='mb-0'>{selectedUser.contact.fullName}</h6>\n              </div>\n              <div className='d-flex align-items-center'>\n                <PhoneCall size={18} className='cursor-pointer d-sm-block d-none mr-1' />\n                <Video size={18} className='cursor-pointer d-sm-block d-none mr-1' />\n                <Search size={18} className='cursor-pointer d-sm-block d-none' />\n                <UncontrolledDropdown>\n                  <DropdownToggle className='btn-icon' color='transparent' size='sm'>\n                    <MoreVertical size='18' />\n                  </DropdownToggle>\n                  <DropdownMenu right>\n                    <DropdownItem href='/' onClick={e => e.preventDefault()}>\n                      View Contact\n                    </DropdownItem>\n                    <DropdownItem href='/' onClick={e => e.preventDefault()}>\n                      Mute Notifications\n                    </DropdownItem>\n                    <DropdownItem href='/' onClick={e => e.preventDefault()}>\n                      Block Contact\n                    </DropdownItem>\n                    <DropdownItem href='/' onClick={e => e.preventDefault()}>\n                      Clear Chat\n                    </DropdownItem>\n                    <DropdownItem href='/' onClick={e => e.preventDefault()}>\n                      Report\n                    </DropdownItem>\n                  </DropdownMenu>\n                </UncontrolledDropdown>\n              </div>\n            </header>\n          </div>\n\n          <ChatWrapper ref={chatArea} className='user-chats' options={{ wheelPropagation: false }}>\n            {selectedUser.chat ? <div className='chats'>{renderChats()}</div> : null}\n          </ChatWrapper>\n\n          <Form className='chat-app-form' onSubmit={e => handleSendMsg(e)}>\n            <InputGroup className='input-group-merge mr-1 form-send-message'>\n              <InputGroupAddon addonType='prepend'>\n                <InputGroupText>\n                  <Mic className='cursor-pointer' size={14} />\n                </InputGroupText>\n              </InputGroupAddon>\n              <Input\n                value={msg}\n                onChange={e => setMsg(e.target.value)}\n                placeholder='Type your message or use speech to text'\n              />\n              <InputGroupAddon addonType='append'>\n                <InputGroupText>\n                  <Label className='attachment-icon mb-0' for='attach-doc'>\n                    <Image className='cursor-pointer text-secondary' size={14} />\n                    <input type='file' id='attach-doc' hidden />\n                  </Label>\n                </InputGroupText>\n              </InputGroupAddon>\n            </InputGroup>\n            <Button className='send' color='primary'>\n              <Send size={14} className='d-lg-none' />\n              <span className='d-none d-lg-block'>Send</span>\n            </Button>\n          </Form>\n        </div>\n      ) : null}\n    </div>\n  )\n}\n\nexport default ChatLog\n","// ** React Imports\nimport { useState } from 'react'\n\n// ** Custom Components\nimport Avatar from '@components/avatar'\n\n// ** Store & Actions\nimport { useDispatch } from 'react-redux'\nimport { selectChat } from './store/actions'\n\n// ** Utils\nimport { formatDateToMonthShort } from '@utils'\n\n// ** Third Party Components\nimport classnames from 'classnames'\nimport PerfectScrollbar from 'react-perfect-scrollbar'\nimport { X, Search, CheckSquare, Bell, User, Trash } from 'react-feather'\nimport { CardText, InputGroup, InputGroupAddon, Input, InputGroupText, Badge, CustomInput, Button } from 'reactstrap'\n\nconst SidebarLeft = props => {\n  // ** Props & Store\n  const { store, sidebar, handleSidebar, userSidebarLeft, handleUserSidebarLeft } = props\n  const { chats, contacts, userProfile } = store\n\n  // ** Dispatch\n  const dispatch = useDispatch()\n\n  // ** State\n  const [about, setAbout] = useState('')\n  const [query, setQuery] = useState('')\n  const [active, setActive] = useState({})\n  const [status, setStatus] = useState('online')\n  const [filteredChat, setFilteredChat] = useState([])\n  const [filteredContacts, setFilteredContacts] = useState([])\n\n  // ** Handles User Chat Click\n  const handleUserClick = (type, id) => {\n    dispatch(selectChat(id))\n    setActive({ type, id })\n    if (sidebar === true) {\n      handleSidebar()\n    }\n  }\n\n  // ** Renders Chat\n  const renderChats = () => {\n    if (chats && chats.length) {\n      if (query.length && !filteredChat.length) {\n        return (\n          <li className='no-results show'>\n            <h6 className='mb-0'>No Chats Found</h6>\n          </li>\n        )\n      } else {\n        const arrToMap = query.length && filteredChat.length ? filteredChat : chats\n\n        return arrToMap.map(item => {\n          const time = formatDateToMonthShort(item.chat.lastMessage ? item.chat.lastMessage.time : new Date())\n\n          return (\n            <li\n              className={classnames({\n                active: active.type === 'chat' && active.id === item.id\n              })}\n              key={item.id}\n              onClick={() => handleUserClick('chat', item.id)}\n            >\n              <Avatar img={item.avatar} imgHeight='42' imgWidth='42' status={item.status} />\n              <div className='chat-info flex-grow-1'>\n                <h5 className='mb-0'>{item.fullName}</h5>\n                <CardText className='text-truncate'>\n                  {item.chat.lastMessage ? item.chat.lastMessage.message : chats[chats.length - 1].message}\n                </CardText>\n              </div>\n              <div className='chat-meta text-nowrap'>\n                <small className='float-right mb-25 chat-time ml-25'>{time}</small>\n                {item.chat.unseenMsgs >= 1 ? (\n                  <Badge className='float-right' color='danger' pill>\n                    {item.chat.unseenMsgs}\n                  </Badge>\n                ) : null}\n              </div>\n            </li>\n          )\n        })\n      }\n    } else {\n      return null\n    }\n  }\n\n  // ** Renders Contact\n  const renderContacts = () => {\n    if (contacts && contacts.length) {\n      if (query.length && !filteredContacts.length) {\n        return (\n          <li className='no-results show'>\n            <h6 className='mb-0'>No Chats Found</h6>\n          </li>\n        )\n      } else {\n        const arrToMap = query.length && filteredContacts.length ? filteredContacts : contacts\n        return arrToMap.map(item => {\n          return (\n            <li\n              className={classnames({\n                active: active.type === 'contact' && active.id === item.id\n              })}\n              key={item.fullName}\n              onClick={() => handleUserClick('contact', item.id)}\n            >\n              <Avatar img={item.avatar} imgHeight='42' imgWidth='42' />\n              <div className='chat-info flex-grow-1'>\n                <h5 className='mb-0'>{item.fullName}</h5>\n                <CardText className='text-truncate'>{item.about}</CardText>\n              </div>\n            </li>\n          )\n        })\n      }\n    } else {\n      return null\n    }\n  }\n\n  // ** Handles Filter\n  const handleFilter = e => {\n    setQuery(e.target.value)\n    const searchFilterFunction = contact => contact.fullName.toLowerCase().includes(e.target.value.toLowerCase())\n    const filteredChatsArr = chats.filter(searchFilterFunction)\n    const filteredContactssArr = contacts.filter(searchFilterFunction)\n    setFilteredChat([...filteredChatsArr])\n    setFilteredContacts([...filteredContactssArr])\n  }\n\n  return store ? (\n    <div className='sidebar-left'>\n      <div className='sidebar'>\n        <div\n          className={classnames('chat-profile-sidebar', {\n            show: userSidebarLeft\n          })}\n        >\n          <header className='chat-profile-header'>\n            <div className='close-icon' onClick={handleUserSidebarLeft}>\n              <X size={14} />\n            </div>\n            <div className='header-profile-sidebar'>\n              <Avatar className='box-shadow-1 avatar-border' img={userProfile.avatar} status={status} size='xl' />\n              <h4 className='chat-user-name'>{userProfile.fullName}</h4>\n              <span className='user-post'>{userProfile.role}</span>\n            </div>\n          </header>\n          <PerfectScrollbar className='profile-sidebar-area' options={{ wheelPropagation: false }}>\n            <h6 className='section-label mb-1'>About</h6>\n            <div className='about-user'>\n              <Input\n                rows='5'\n                defaultValue={userProfile.about}\n                type='textarea'\n                onChange={e => setAbout(e.target.value)}\n                className={classnames('char-textarea', {\n                  'text-danger': about && about.length > 120\n                })}\n              />\n              <small className='counter-value float-right'>\n                <span className='char-count'>{userProfile.about ? userProfile.about.length : 0}</span>/ 120\n              </small>\n            </div>\n            <h6 className='section-label mb-1 mt-3'>Status</h6>\n            <ul className='list-unstyled user-status'>\n              <li className='pb-1'>\n                <CustomInput\n                  type='radio'\n                  className='custom-control-primary'\n                  id='online'\n                  label='Online'\n                  onChange={e => setStatus('online')}\n                  checked={status === 'online'}\n                />\n              </li>\n              <li className='pb-1'>\n                <CustomInput\n                  type='radio'\n                  className='custom-control-danger'\n                  id='busy'\n                  label='Do Not Disturb'\n                  onChange={e => setStatus('busy')}\n                  checked={status === 'busy'}\n                />\n              </li>\n              <li className='pb-1'>\n                <CustomInput\n                  type='radio'\n                  className='custom-control-warning'\n                  id='away'\n                  label='Away'\n                  onChange={e => setStatus('away')}\n                  checked={status === 'away'}\n                />\n              </li>\n              <li className='pb-1'>\n                <CustomInput\n                  type='radio'\n                  className='custom-control-secondary'\n                  id='offline'\n                  label='Offline'\n                  onChange={e => setStatus('offline')}\n                  checked={status === 'offline'}\n                />\n              </li>\n            </ul>\n            <h6 className='section-label mb-1 mt-2'>Settings</h6>\n            <ul className='list-unstyled'>\n              <li className='d-flex justify-content-between align-items-center mb-1'>\n                <div className='d-flex align-items-center'>\n                  <CheckSquare className='mr-75' size='18' />\n                  <span className='align-middle'>Two-step Verification</span>\n                </div>\n                <CustomInput type='switch' id='verification' name='verification' label='' defaultChecked />\n              </li>\n              <li className='d-flex justify-content-between align-items-center mb-1'>\n                <div className='d-flex align-items-center'>\n                  <Bell className='mr-75' size='18' />\n                  <span className='align-middle'>Notification</span>\n                </div>\n                <CustomInput type='switch' id='notifications' name='notifications' label='' />\n              </li>\n              <li className='d-flex align-items-center cursor-pointer mb-1'>\n                <User className='mr-75' size='18' />\n                <span className='align-middle'>Invite Friends</span>\n              </li>\n              <li className='d-flex align-items-center cursor-pointer'>\n                <Trash className='mr-75' size='18' />\n                <span className='align-middle'>Delete Account</span>\n              </li>\n            </ul>\n            <div className='mt-3'>\n              <Button color='primary'>Logout</Button>\n            </div>\n          </PerfectScrollbar>\n        </div>\n        <div\n          className={classnames('sidebar-content', {\n            show: sidebar === true\n          })}\n        >\n          <div className='sidebar-close-icon' onClick={handleSidebar}>\n            <X size={14} />\n          </div>\n          <div className='chat-fixed-search'>\n            <div className='d-flex align-items-center w-100'>\n              <div className='sidebar-profile-toggle' onClick={handleUserSidebarLeft}>\n                {Object.keys(userProfile).length ? (\n                  <Avatar\n                    className='avatar-border'\n                    img={userProfile.avatar}\n                    status={status}\n                    imgHeight='42'\n                    imgWidth='42'\n                  />\n                ) : null}\n              </div>\n              <InputGroup className='input-group-merge ml-1 w-100'>\n                <InputGroupAddon addonType='prepend'>\n                  <InputGroupText className='round'>\n                    <Search className='text-muted' size={14} />\n                  </InputGroupText>\n                </InputGroupAddon>\n                <Input\n                  value={query}\n                  className='round'\n                  placeholder='Search or start a new chat'\n                  onChange={handleFilter}\n                />\n              </InputGroup>\n            </div>\n          </div>\n          <PerfectScrollbar className='chat-user-list-wrapper list-group' options={{ wheelPropagation: false }}>\n            <h4 className='chat-list-title'>Chats</h4>\n            <ul className='chat-users-list chat-list media-list'>{renderChats()}</ul>\n            <h4 className='chat-list-title'>Contacts</h4>\n            <ul className='chat-users-list contact-list media-list'>{renderContacts()}</ul>\n          </PerfectScrollbar>\n        </div>\n      </div>\n    </div>\n  ) : null\n}\n\nexport default SidebarLeft\n","// ** Custom Components\nimport Avatar from '@components/avatar'\n\n// ** Third Party Components\nimport classnames from 'classnames'\nimport PerfectScrollbar from 'react-perfect-scrollbar'\nimport { X, Mail, PhoneCall, Clock, Tag, Star, Image, Trash, Slash } from 'react-feather'\n\nconst UserProfileSidebar = props => {\n  // ** Props\n  const { user, handleUserSidebarRight, userSidebarRight } = props\n\n  return (\n    <div className={classnames('user-profile-sidebar', { show: userSidebarRight === true })}>\n      <header className='user-profile-header'>\n        <span className='close-icon' onClick={handleUserSidebarRight}>\n          <X size={14} />\n        </span>\n        <div className='header-profile-sidebar'>\n          <Avatar\n            className='box-shadow-1 avatar-border'\n            size='xl'\n            status={user.status}\n            img={user.avatar}\n            imgHeight='70'\n            imgWidth='70'\n          />\n          <h4 className='chat-user-name'>{user.fullName}</h4>\n          <span className='user-post'>{user.role}</span>\n        </div>\n      </header>\n      <PerfectScrollbar className='user-profile-sidebar-area' options={{ wheelPropagation: false }}>\n        <h6 className='section-label mb-1'>About</h6>\n        <p>{user.about}</p>\n        <div className='personal-info'>\n          <h6 className='section-label mb-1 mt-3'>Personal Information</h6>\n          <ul className='list-unstyled'>\n            <li className='mb-1'>\n              <Mail className='mr-50' size={17} />\n              <span className='align-middle'>lucifer@email.com</span>\n            </li>\n            <li className='mb-1'>\n              <PhoneCall className='mr-50' size={17} />\n              <span className='align-middle'> +1(123) 456 - 7890</span>\n            </li>\n            <li>\n              <Clock className='mr-50' size={17} />\n              <span className='align-middle'> Mon - Fri 10AM - 8PM</span>\n            </li>\n          </ul>\n        </div>\n        <div className='more-options'>\n          <h6 className='section-label mb-1 mt-3'>Options</h6>\n          <ul className='list-unstyled'>\n            <li className='cursor-pointer mb-1'>\n              <Tag className='mr-50' size={17} />\n              <span className='align-middle'> Add Tag</span>\n            </li>\n            <li className='cursor-pointer mb-1'>\n              <Star className='mr-50' size={17} />\n              <span className='align-middle'> Important Contact</span>\n            </li>\n            <li className='cursor-pointer mb-1'>\n              <Image className='mr-50' size={17} />\n              <span className='align-middle'> Shared Media</span>\n            </li>\n            <li className='cursor-pointer mb-1'>\n              <Trash className='mr-50' size={17} />\n              <span className='align-middle'> Delete Contact</span>\n            </li>\n            <li className='cursor-pointer'>\n              <Slash className='mr-50' size={17} />\n              <span className='align-middle'>Block Contact</span>\n            </li>\n          </ul>\n        </div>\n      </PerfectScrollbar>\n    </div>\n  )\n}\n\nexport default UserProfileSidebar\n","// ** React Imports\nimport { Fragment, useState, useEffect } from 'react'\n\n// ** Chat App Component Imports\nimport Chat from './Chat'\nimport Sidebar from './SidebarLeft'\nimport UserProfileSidebar from './UserProfileSidebar'\n\n// ** Third Party Components\nimport classnames from 'classnames'\n\n// ** Store & Actions\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getUserProfile, getChatContacts } from './store/actions'\n\nimport '@styles/base/pages/app-chat.scss'\nimport '@styles/base/pages/app-chat-list.scss'\n\nconst AppChat = () => {\n  // ** Store Vars\n  const dispatch = useDispatch()\n  const store = useSelector(state => state.chat)\n\n  // ** States\n  const [user, setUser] = useState({})\n  const [sidebar, setSidebar] = useState(false)\n  const [userSidebarRight, setUserSidebarRight] = useState(false)\n  const [userSidebarLeft, setUserSidebarLeft] = useState(false)\n\n  // ** Sidebar & overlay toggle functions\n  const handleSidebar = () => setSidebar(!sidebar)\n  const handleUserSidebarLeft = () => setUserSidebarLeft(!userSidebarLeft)\n  const handleUserSidebarRight = () => setUserSidebarRight(!userSidebarRight)\n  const handleOverlayClick = () => {\n    setSidebar(false)\n    setUserSidebarRight(false)\n    setUserSidebarLeft(false)\n  }\n\n  // ** Set user function for Right Sidebar\n  const handleUser = obj => setUser(obj)\n\n  // ** Get data on Mount\n  useEffect(() => {\n    dispatch(getChatContacts())\n    dispatch(getUserProfile())\n  }, [dispatch])\n\n  return (\n    <Fragment>\n      <Sidebar\n        store={store}\n        sidebar={sidebar}\n        handleSidebar={handleSidebar}\n        userSidebarLeft={userSidebarLeft}\n        handleUserSidebarLeft={handleUserSidebarLeft}\n      />\n      <div className='content-right'>\n        <div className='content-wrapper'>\n          <div className='content-body'>\n            <div\n              className={classnames('body-content-overlay', {\n                show: userSidebarRight === true || sidebar === true || userSidebarLeft === true\n              })}\n              onClick={handleOverlayClick}\n            ></div>\n            <Chat\n              store={store}\n              handleUser={handleUser}\n              handleSidebar={handleSidebar}\n              userSidebarLeft={userSidebarLeft}\n              handleUserSidebarRight={handleUserSidebarRight}\n            />\n            <UserProfileSidebar\n              user={user}\n              userSidebarRight={userSidebarRight}\n              handleUserSidebarRight={handleUserSidebarRight}\n            />\n          </div>\n        </div>\n      </div>\n    </Fragment>\n  )\n}\n\nexport default AppChat\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'p'\n};\n\nvar CardText = function CardText(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card-text'), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nCardText.propTypes = propTypes;\nCardText.defaultProps = defaultProps;\nexport default CardText;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType, isObject } from './utils';\nvar colWidths = ['xs', 'sm', 'md', 'lg', 'xl'];\nvar stringOrNumberProp = PropTypes.oneOfType([PropTypes.number, PropTypes.string]);\nvar columnProps = PropTypes.oneOfType([PropTypes.bool, PropTypes.string, PropTypes.number, PropTypes.shape({\n  size: stringOrNumberProp,\n  order: stringOrNumberProp,\n  offset: stringOrNumberProp\n})]);\nvar propTypes = {\n  children: PropTypes.node,\n  hidden: PropTypes.bool,\n  check: PropTypes.bool,\n  size: PropTypes.string,\n  for: PropTypes.string,\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  xs: columnProps,\n  sm: columnProps,\n  md: columnProps,\n  lg: columnProps,\n  xl: columnProps,\n  widths: PropTypes.array\n};\nvar defaultProps = {\n  tag: 'label',\n  widths: colWidths\n};\n\nvar getColumnSizeClass = function getColumnSizeClass(isXs, colWidth, colSize) {\n  if (colSize === true || colSize === '') {\n    return isXs ? 'col' : \"col-\" + colWidth;\n  } else if (colSize === 'auto') {\n    return isXs ? 'col-auto' : \"col-\" + colWidth + \"-auto\";\n  }\n\n  return isXs ? \"col-\" + colSize : \"col-\" + colWidth + \"-\" + colSize;\n};\n\nvar Label = function Label(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      hidden = props.hidden,\n      widths = props.widths,\n      Tag = props.tag,\n      check = props.check,\n      size = props.size,\n      htmlFor = props.for,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"hidden\", \"widths\", \"tag\", \"check\", \"size\", \"for\"]);\n\n  var colClasses = [];\n  widths.forEach(function (colWidth, i) {\n    var columnProp = props[colWidth];\n    delete attributes[colWidth];\n\n    if (!columnProp && columnProp !== '') {\n      return;\n    }\n\n    var isXs = !i;\n    var colClass;\n\n    if (isObject(columnProp)) {\n      var _classNames;\n\n      var colSizeInterfix = isXs ? '-' : \"-\" + colWidth + \"-\";\n      colClass = getColumnSizeClass(isXs, colWidth, columnProp.size);\n      colClasses.push(mapToCssModules(classNames((_classNames = {}, _classNames[colClass] = columnProp.size || columnProp.size === '', _classNames[\"order\" + colSizeInterfix + columnProp.order] = columnProp.order || columnProp.order === 0, _classNames[\"offset\" + colSizeInterfix + columnProp.offset] = columnProp.offset || columnProp.offset === 0, _classNames))), cssModule);\n    } else {\n      colClass = getColumnSizeClass(isXs, colWidth, columnProp);\n      colClasses.push(colClass);\n    }\n  });\n  var classes = mapToCssModules(classNames(className, hidden ? 'sr-only' : false, check ? 'form-check-label' : false, size ? \"col-form-label-\" + size : false, colClasses, colClasses.length ? 'col-form-label' : false), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({\n    htmlFor: htmlFor\n  }, attributes, {\n    className: classes\n  }));\n};\n\nLabel.propTypes = propTypes;\nLabel.defaultProps = defaultProps;\nexport default Label;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  children: PropTypes.node,\n  inline: PropTypes.bool,\n  tag: tagPropType,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.func, PropTypes.string]),\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'form'\n};\n\nvar Form = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(Form, _Component);\n\n  function Form(props) {\n    var _this;\n\n    _this = _Component.call(this, props) || this;\n    _this.getRef = _this.getRef.bind(_assertThisInitialized(_this));\n    _this.submit = _this.submit.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  var _proto = Form.prototype;\n\n  _proto.getRef = function getRef(ref) {\n    if (this.props.innerRef) {\n      this.props.innerRef(ref);\n    }\n\n    this.ref = ref;\n  };\n\n  _proto.submit = function submit() {\n    if (this.ref) {\n      this.ref.submit();\n    }\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        className = _this$props.className,\n        cssModule = _this$props.cssModule,\n        inline = _this$props.inline,\n        Tag = _this$props.tag,\n        innerRef = _this$props.innerRef,\n        attributes = _objectWithoutPropertiesLoose(_this$props, [\"className\", \"cssModule\", \"inline\", \"tag\", \"innerRef\"]);\n\n    var classes = mapToCssModules(classNames(className, inline ? 'form-inline' : false), cssModule);\n    return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n      ref: innerRef,\n      className: classes\n    }));\n  };\n\n  return Form;\n}(Component);\n\nForm.propTypes = propTypes;\nForm.defaultProps = defaultProps;\nexport default Form;"],"sourceRoot":""}