{"version":3,"sources":["views/forms/form-elements/file-uploader/FileUploaderBasic.js","views/forms/form-elements/file-uploader/FileUploaderMulti.js","views/forms/form-elements/file-uploader/FileUploaderRestrictions.js","views/forms/form-elements/file-uploader/index.js","../node_modules/reactstrap/es/CardText.js","@core/components/extensions-header/index.js"],"names":["FileUploaderBasic","useState","img","setImg","uppy","Uppy","meta","type","restrictions","maxNumberOfFiles","autoProceed","use","thumbnailGenerator","on","file","preview","Card","CardHeader","CardTitle","tag","CardBody","className","src","alt","FileUploaderMulti","previewArr","setPreviewArr","arr","push","length","map","index","FileUploaderRestrictions","allowedFileTypes","CardText","href","target","rel","Uploader","title","subTitle","link","Row","Col","sm","propTypes","tagPropType","PropTypes","string","cssModule","object","props","Tag","attributes","_objectWithoutPropertiesLoose","classes","mapToCssModules","classNames","React","createElement","_extends","defaultProps","ExtensionsHeader","data-tour"],"mappings":"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","file":"static/js/145.b26796b8.chunk.js","sourcesContent":["import { useState } from 'react'\nimport Uppy from '@uppy/core'\nimport thumbnailGenerator from '@uppy/thumbnail-generator'\nimport { DragDrop } from '@uppy/react'\nimport { Card, CardHeader, CardTitle, CardBody } from 'reactstrap'\n\nconst FileUploaderBasic = () => {\n  const [img, setImg] = useState(null)\n\n  const uppy = new Uppy({\n    meta: { type: 'avatar' },\n    restrictions: { maxNumberOfFiles: 1 },\n    autoProceed: true\n  })\n\n  uppy.use(thumbnailGenerator)\n\n  uppy.on('thumbnail:generated', (file, preview) => {\n    setImg(preview)\n  })\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle tag='h4'> Basic </CardTitle>\n      </CardHeader>\n      <CardBody>\n        <DragDrop uppy={uppy} />\n        {img !== null ? <img className='rounded mt-2' src={img} alt='avatar' /> : null}\n      </CardBody>\n    </Card>\n  )\n}\n\nexport default FileUploaderBasic\n","import { useState } from 'react'\nimport Uppy from '@uppy/core'\nimport thumbnailGenerator from '@uppy/thumbnail-generator'\nimport { DragDrop } from '@uppy/react'\nimport { Card, CardHeader, CardTitle, CardBody } from 'reactstrap'\n\nconst FileUploaderMulti = () => {\n  const [previewArr, setPreviewArr] = useState([])\n\n  const uppy = new Uppy({\n    meta: { type: 'avatar' },\n    autoProceed: true\n  })\n\n  uppy.use(thumbnailGenerator)\n\n  uppy.on('thumbnail:generated', (file, preview) => {\n    const arr = previewArr\n    arr.push(preview)\n    setPreviewArr([...arr])\n  })\n\n  const renderPreview = () => {\n    if (previewArr.length) {\n      return previewArr.map((src, index) => <img key={index} className='rounded mt-2 mr-1' src={src} alt='avatar' />)\n    } else {\n      return null\n    }\n  }\n\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle tag='h4'> Multiple Files Upload</CardTitle>\n      </CardHeader>\n      <CardBody>\n        <DragDrop uppy={uppy} />\n        {renderPreview()}\n      </CardBody>\n    </Card>\n  )\n}\n\nexport default FileUploaderMulti\n","import { useState } from 'react'\nimport Uppy from '@uppy/core'\nimport { DragDrop } from '@uppy/react'\nimport thumbnailGenerator from '@uppy/thumbnail-generator'\nimport { Card, CardHeader, CardTitle, CardBody, CardText } from 'reactstrap'\n\nconst FileUploaderRestrictions = () => {\n  const [previewArr, setPreviewArr] = useState([])\n\n  const uppy = new Uppy({\n    meta: { type: 'avatar' },\n    autoProceed: true,\n    restrictions: { maxNumberOfFiles: 2, allowedFileTypes: ['image/*'] }\n  })\n\n  uppy.use(thumbnailGenerator)\n\n  uppy.on('thumbnail:generated', (file, preview) => {\n    const arr = previewArr\n    arr.push(preview)\n    setPreviewArr([...arr])\n  })\n\n  const renderPreview = () => {\n    if (previewArr.length) {\n      return previewArr.map((src, index) => <img key={index} className='rounded mt-2 mr-1' src={src} alt='avatar' />)\n    } else {\n      return null\n    }\n  }\n\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle tag='h4'> Restrictions</CardTitle>\n      </CardHeader>\n      <CardBody>\n        <CardText>\n          Use prop <code>restrictions</code> add upload restrictions like <code>maxNumberOfFiles</code> &\n          <code>allowedFileTypes</code>. Refer this{' '}\n          <a href='https://uppy.io/docs/uppy/#restrictions' target='_blank' rel='noopener noreferrer'>\n            link\n          </a>{' '}\n          for more info.\n        </CardText>\n        <DragDrop uppy={uppy} />\n        {renderPreview()}\n      </CardBody>\n    </Card>\n  )\n}\n\nexport default FileUploaderRestrictions\n","import { Fragment } from 'react'\nimport { Row, Col } from 'reactstrap'\nimport FileUploaderBasic from './FileUploaderBasic'\nimport FileUploaderMulti from './FileUploaderMulti'\nimport FileUploaderRestrictions from './FileUploaderRestrictions'\nimport ExtensionsHeader from '@components/extensions-header'\n\nimport 'uppy/dist/uppy.css'\nimport '@uppy/status-bar/dist/style.css'\nimport '@styles/react/libs/file-uploader/file-uploader.scss'\n\nconst Uploader = () => {\n  return (\n    <Fragment>\n      <ExtensionsHeader\n        title='React Uppy'\n        subTitle='Uppy is a sleek, modular React file uploader that integrates seamlessly with any application.'\n        link='https://github.com/transloadit/uppy'\n      />\n\n      <Row>\n        <Col sm='12'>\n          <FileUploaderBasic />\n        </Col>\n        <Col sm='12'>\n          <FileUploaderMulti />\n        </Col>\n        <Col sm='12'>\n          <FileUploaderRestrictions />\n        </Col>\n      </Row>\n    </Fragment>\n  )\n}\n\nexport default Uploader\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'p'\n};\n\nvar CardText = function CardText(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card-text'), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nCardText.propTypes = propTypes;\nCardText.defaultProps = defaultProps;\nexport default CardText;","// ** React Imports\nimport Proptypes from 'prop-types'\nimport { Row, Col } from 'reactstrap'\n\nconst ExtensionsHeader = props => {\n  return (\n    <Row className='mb-2'>\n      <Col sm='12' className='ml-50'>\n        <p className='font-medium-5 mt-1 extension-title' data-tour='extension-title'>\n          {props.title}\n        </p>\n        {props.link ? (\n          <a href={props.link} target='_blank' rel='noopener noreferrer'>\n            {props.subTitle}\n          </a>\n        ) : (\n          <p className='text-primary'>{props.subTitle}</p>\n        )}\n      </Col>\n    </Row>\n  )\n}\nexport default ExtensionsHeader\n\n// ** PropTypes\nExtensionsHeader.propTypes = {\n  title: Proptypes.string.isRequired,\n  subTitle: Proptypes.string.isRequired,\n  link: Proptypes.string\n}\n"],"sourceRoot":""}